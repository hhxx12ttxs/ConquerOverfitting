package srm563;

public class SpellCardsEasyTest {
	public SpellCardsEasyTest() {
		main(null);
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1,
			boolean hasAnswer, int p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SpellCardsEasy obj;
		int answer;
		obj = new SpellCardsEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.maxDamage(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		all_right = true;

		int[] p0;
		int[] p1;
		int p2;

		// ----- test 0 -----
		p0 = new int[] { 1, 1, 1 };
		p1 = new int[] { 10, 20, 30 };
		p2 = 60;
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 1 -----
		p0 = new int[] { 3, 3, 3 };
		p1 = new int[] { 10, 20, 30 };
		p2 = 10;
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 2 -----
		p0 = new int[] { 4, 4, 4 };
		p1 = new int[] { 10, 20, 30 };
		p2 = 0;
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 3 -----
		p0 = new int[] { 50, 1, 50, 1, 50 };
		p1 = new int[] { 10, 20, 30, 40, 50 };
		p2 = 60;
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 4 -----
		p0 = new int[] { 2, 1, 1 };
		p1 = new int[] { 40, 40, 10 };
		p2 = 80;
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 5 -----
		p0 = new int[] { 1, 2, 1, 1, 3, 2, 1 };
		p1 = new int[] { 10, 40, 10, 10, 90, 40, 10 };
		p2 = 150;
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------

		// ----- test 6 -----
		p0 = new int[] { 1, 2, 2, 3, 1, 4, 2 };
		p1 = new int[] { 113, 253, 523, 941, 250, 534, 454 };
		p2 = 1577;
		all_right = KawigiEdit_RunTest(6, p0, p1, true, p2) && all_right;
		// ------------------

		p0 = new int[] { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
		p1 = new int[] { 770, 705, 708, 713, 794, 675, 720, 759, 738, 686 };
		p2 = 7268;
		all_right = KawigiEdit_RunTest(7, p0, p1, true, p2) && all_right;

		p0 = new int[] { 3, 5, 1, 1, 3, 6, 1, 3, 6, 7, 1, 6, 1, 5, 7, 5, 7, 1, 7,
				4, 4, 4, 1, 7, 5, 7, 2, 4, 3, 2, 7, 1, 7, 2, 6, 5, 4, 7, 2 };
		p1 = new int[] { 243, 250, 262, 288, 271, 260, 283, 269, 292, 245, 275,
				252, 251, 282, 234, 240, 284, 267, 287, 235, 272, 259, 253, 258, 249,
				279, 275, 266, 275, 292, 229, 242, 270, 254, 274, 275, 290, 263, 249 };
		p2 = 4813;
		all_right = KawigiEdit_RunTest(8, p0, p1, true, p2) && all_right;

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

