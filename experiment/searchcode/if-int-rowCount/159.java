/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SentenceRecommenderUI.java
 *
 * Created on 2009. 11. 12, 오후 2:58:21
 */
package wa.ui;

import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import wa.util.ClipBoard;
import was2.Sentence;
import was2.SentenceRecommender;

/**
 *
 * @author JungHwan
 */
public class SentenceRecommenderUI extends javax.swing.JFrame {

    private WritingAssistantUI waUI;
    private SentenceRecommender sr;

    /** Creates new form SentenceRecommenderUI */
    public SentenceRecommenderUI(WritingAssistantUI ui) {
        initComponents();
        WritingAssistantUI.centerOnScreen(this);
        this.waUI = ui;
    }
    public void clear(){
        DefaultTableModel tModel1 = (DefaultTableModel) resultTable1.getModel();
        DefaultTableModel tModel2 = (DefaultTableModel) resultTable2.getModel();

        while(true){
            int rowCount = tModel1.getRowCount();
            if(rowCount == 0) break;
            tModel1.removeRow(0);
        }
        while(true){
            int rowCount = tModel2.getRowCount();
            if(rowCount == 0) break;
            tModel2.removeRow(0);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultTable2 = new javax.swing.JTable();

        setTitle("문장 추천");
        setResizable(false);

        jLabel1.setText("(주의) 서술어를 마지막에 입력하세요!");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1.setText("검색");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("키워드검색 예) 예쁘다 꽃 피다 ⇒ 예상추천 문장 : 예쁜 꽃이 피었다");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        resultTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "검색 결과", "추천"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(resultTable1);
        resultTable1.getColumnModel().getColumn(0).setResizable(false);
        resultTable1.getColumnModel().getColumn(0).setPreferredWidth(500);
        resultTable1.getColumnModel().getColumn(1).setResizable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addComponent(jLabel3)
                .addContainerGap(302, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("키워드 중심 결과보기", jPanel2);

        resultTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "검색 결과"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        resultTable2.setColumnSelectionAllowed(true);
        resultTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(resultTable2);
        resultTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        resultTable2.getColumnModel().getColumn(0).setResizable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("모든 결과보기", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 567, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        clear();
        sr = new SentenceRecommender(this, jTextField1.getText(), waUI.getConjugationConfig());
        sr.execute();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void resultTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultTable1MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            DefaultTableModel t1Model = (DefaultTableModel) resultTable1.getModel();
            int selectedIndex = resultTable1.getSelectedRow();
            String selectedSen = (String) t1Model.getValueAt(selectedIndex, 0);


            String msg = "\"" + selectedSen + "\"을(를) " + "복사하시겠습니까?";
            int change = JOptionPane.showConfirmDialog(this, msg, "문장 복사", JOptionPane.OK_CANCEL_OPTION);

            if (change == 0) {
                ClipBoard.setData(selectedSen);
                String uiText = waUI.getTextArea().getText();
                uiText = uiText + selectedSen;
                waUI.getTextArea().setText(uiText);
                this.setVisible(false);

            }
        }
    }//GEN-LAST:event_resultTable1MouseClicked

    private void resultTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultTable2MouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            DefaultTableModel t1Model = (DefaultTableModel) resultTable2.getModel();
            int selectedIndex = resultTable2.getSelectedRow();
            String selectedSen = (String) t1Model.getValueAt(selectedIndex, 0);


            String msg = "\"" + selectedSen + "\"을(를) " + "복사하시겠습니까?";
            int change = JOptionPane.showConfirmDialog(this, msg, "문장 복사", JOptionPane.OK_CANCEL_OPTION);

            if (change == 0) {
                ClipBoard.setData(selectedSen);
                String uiText = waUI.getTextArea().getText();
                uiText = uiText + selectedSen;
                waUI.getTextArea().setText(uiText);
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_resultTable2MouseClicked

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButton1ActionPerformed(null);
        }
    }//GEN-LAST:event_jTextField1KeyPressed
   

    public JTabbedPane getJTabbedPane() {
        return jTabbedPane1;
    }

    public void ShowResultsToTable(List<Sentence> list) {
        DefaultTableModel dt = (DefaultTableModel) resultTable1.getModel();
        DefaultTableModel dt2 = (DefaultTableModel) resultTable2.getModel();
        while (dt.getRowCount() > 0) {
            dt.removeRow(0);
        }

        while (dt2.getRowCount() > 0) {
            dt2.removeRow(0);
        }

        for (Sentence s : list) {

            if (s.isAllSatisfied()) {
                Object[] o1 = {s.getKeySentence(), true};
                Object[] o2 = {s.getKeySentence(), false};
                if (s.getKeyCount() > 2) {
                    dt.addRow(o1);
                } else {
                    dt.addRow(o2);
                }
            }
        }

        if (dt.getRowCount() == 0) {
            Vector v = new Vector();
            v.add("검색 결과가 없습니다.");
            dt.addRow(v);
            jTabbedPane1.setSelectedIndex(1);
        }


        for (Sentence s : list) {
            Vector v = new Vector();
            v.add(s.getKeySentence());
            dt2.addRow(v);
        }

        if (dt2.getRowCount() == 0) {
            Vector v = new Vector();
            v.add("검색 결과가 없습니다.");
            dt2.addRow(v);
        }
    }

    public JProgressBar getProgressBar() {
        return jProgressBar1;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable resultTable1;
    private javax.swing.JTable resultTable2;
    // End of variables declaration//GEN-END:variables
}

