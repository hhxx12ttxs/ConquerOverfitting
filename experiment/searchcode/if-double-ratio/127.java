/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package edu.berkeley.path.model_elements_base;  
@SuppressWarnings("all")
/** * Used to feed a per-timestep "drip" input to freeway model.
   * This is sliced off of SplitRatioSet at a given time.
   *
   * Not part of Scenario; can be used interchangeably for 
   * real-time input or for sliced up profiles from a scenario. */
public class SplitRatioMap extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SplitRatioMap\",\"namespace\":\"edu.berkeley.path.model_elements_base\",\"doc\":\"* Used to feed a per-timestep \\\"drip\\\" input to freeway model.\\n   * This is sliced off of SplitRatioSet at a given time.\\n   *\\n   * Not part of Scenario; can be used interchangeably for \\n   * real-time input or for sliced up profiles from a scenario.\",\"fields\":[{\"name\":\"ratio\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"map\",\"values\":{\"type\":\"map\",\"values\":{\"type\":\"map\",\"values\":\"double\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"},\"doc\":\"* map of ratios at a given time;\\n     * map keys are: nodeId, inLinkId, outLinkId, vehTypeId;\"}]}");
  /** * map of ratios at a given time;
     * map keys are: nodeId, inLinkId, outLinkId, vehTypeId; */
  @Deprecated public java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>> ratio;

  /**
   * Default constructor.
   */
  public SplitRatioMap() {}

  /**
   * All-args constructor.
   */
  public SplitRatioMap(java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>> ratio) {
    this.ratio = ratio;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ratio;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ratio = (java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ratio' field.
   * * map of ratios at a given time;
     * map keys are: nodeId, inLinkId, outLinkId, vehTypeId;   */
  public java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>> getRatio() {
    return ratio;
  }

  /**
   * Sets the value of the 'ratio' field.
   * * map of ratios at a given time;
     * map keys are: nodeId, inLinkId, outLinkId, vehTypeId;   * @param value the value to set.
   */
  public void setRatio(java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>> value) {
    this.ratio = value;
  }

  /** Creates a new SplitRatioMap RecordBuilder */
  public static edu.berkeley.path.model_elements_base.SplitRatioMap.Builder newBuilder() {
    return new edu.berkeley.path.model_elements_base.SplitRatioMap.Builder();
  }
  
  /** Creates a new SplitRatioMap RecordBuilder by copying an existing Builder */
  public static edu.berkeley.path.model_elements_base.SplitRatioMap.Builder newBuilder(edu.berkeley.path.model_elements_base.SplitRatioMap.Builder other) {
    return new edu.berkeley.path.model_elements_base.SplitRatioMap.Builder(other);
  }
  
  /** Creates a new SplitRatioMap RecordBuilder by copying an existing SplitRatioMap instance */
  public static edu.berkeley.path.model_elements_base.SplitRatioMap.Builder newBuilder(edu.berkeley.path.model_elements_base.SplitRatioMap other) {
    return new edu.berkeley.path.model_elements_base.SplitRatioMap.Builder(other);
  }
  
  /**
   * RecordBuilder for SplitRatioMap instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SplitRatioMap>
    implements org.apache.avro.data.RecordBuilder<SplitRatioMap> {

    private java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>> ratio;

    /** Creates a new Builder */
    private Builder() {
      super(edu.berkeley.path.model_elements_base.SplitRatioMap.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(edu.berkeley.path.model_elements_base.SplitRatioMap.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing SplitRatioMap instance */
    private Builder(edu.berkeley.path.model_elements_base.SplitRatioMap other) {
            super(edu.berkeley.path.model_elements_base.SplitRatioMap.SCHEMA$);
      if (isValidValue(fields()[0], other.ratio)) {
        this.ratio = (java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>>) data().deepCopy(fields()[0].schema(), other.ratio);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'ratio' field */
    public java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>> getRatio() {
      return ratio;
    }
    
    /** Sets the value of the 'ratio' field */
    public edu.berkeley.path.model_elements_base.SplitRatioMap.Builder setRatio(java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>> value) {
      validate(fields()[0], value);
      this.ratio = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ratio' field has been set */
    public boolean hasRatio() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ratio' field */
    public edu.berkeley.path.model_elements_base.SplitRatioMap.Builder clearRatio() {
      ratio = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public SplitRatioMap build() {
      try {
        SplitRatioMap record = new SplitRatioMap();
        record.ratio = fieldSetFlags()[0] ? this.ratio : (java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.util.Map<java.lang.String,java.lang.Double>>>>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}

