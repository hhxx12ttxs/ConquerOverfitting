//output charts as png or pdf files. only used when charts are scheduled to run as jobs
//files that are created when charts are executed interactively are generated by the processChart method of the respective graph class

package art.graph;

import java.util.Calendar;
import java.text.SimpleDateFormat; 
import java.util.Date; 
import java.sql.*;
import java.io.*;
import org.jfree.chart.*;
import org.jfree.data.general.*;
import org.jfree.chart.plot.*;
import org.jfree.chart.labels.*;
import org.jfree.data.xy.*; //for xyseriescollection
import org.jfree.data.time.*; //for timeseriescollection
import org.jfree.data.category.*; //for categorydataset
import org.jfree.chart.renderer.category.*;
import org.jfree.chart.renderer.xy.*;


public class ExportGraph
{
	String fullFileName, fullFileNameWithoutExt;
	String queryName;
	String userName;	
	String output;
	String  y_m_d;
	String  h_m_s;

	public void setExportPath(String s) {
		try
		{		
			// Build filename
			Calendar cal = Calendar.getInstance();

			Date today=cal.getTime();

			String dateFormat="yyyy_MM_dd";		
			SimpleDateFormat dateFormatter=new SimpleDateFormat(dateFormat);
			y_m_d=dateFormatter.format(today);

			String timeFormat="HH_mm_ss";
			SimpleDateFormat timeFormatter=new SimpleDateFormat(timeFormat);
			h_m_s=timeFormatter.format(today);

			fullFileNameWithoutExt = s+userName + "-" + queryName + "-" + y_m_d + "-" + h_m_s;	
			
		} catch(Exception e){
			System.out.println(e);      
		}
	}

	public String getFileName() {
		return fullFileName;
	}

	public void setQueryName(String s){
		queryName = s.replace('/','_').replace('*','_').replace('&','_').replace('?','_').replace('!','_').replace('\\','_').replace('[','_').replace(']','_');
	}   
	public void setUserName(String s){    
		userName = s;
	} 

	public void setOutput(String s) {
		output = s;
	}
	
	public void createFile(ResultSet rs, int queryType, String queryShortDescription,String queryDescription) {					
		
		JFreeChart chart=null;
		int width=600;
		int height=400;	
		String title;
		String xlabel;
		String ylabel;
		String seriesName;
		ResultSetMetaData rsmd;		
		
		try
		{	
			//set chart title and axis label variables
			title=queryShortDescription;
			xlabel=queryDescription;
			
			rsmd=rs.getMetaData();	
			
			seriesName=rsmd.getColumnName(2);
			ylabel=rsmd.getColumnName(1);				
			
			//ensure you have white plot backgrounds. this was changed in jfreechart 1.0.11 to default to grey
			ChartFactory.setChartTheme(StandardChartTheme.createLegacyTheme());
			BarRenderer.setDefaultBarPainter(new StandardBarPainter());
			XYBarRenderer.setDefaultBarPainter(new StandardXYBarPainter());

			// build the chart object
			switch (queryType)
			{
			case -2:
				//pie chart				
				
				//create dataset for the pie chart
				artPie pieChart=new artPie();								
				pieChart.prepareDataset(rs);				
				DefaultPieDataset pieDataset= (DefaultPieDataset)pieChart.produceDataset(null);		
				
				//create chart
				chart=ChartFactory.createPieChart3D(title,pieDataset,true,false,false);		
				
				//set chart section labels. to have name of category, data value and percentage e.g. laptops = 21 (54%)
				PiePlot3D plot = (PiePlot3D)chart.getPlot();		
				plot.setLabelGenerator(new StandardPieSectionLabelGenerator("{0} = {1} ({2})"));
											
				break;
			case -1:
				//xy chart
				
				//create dataset for the xy chart
				artXY xyChart=new artXY();								
				
				xyChart.setSeriesName(seriesName);				
				xyChart.prepareDataset(rs);
				
				XYSeriesCollection xyDataset= (XYSeriesCollection) xyChart.produceDataset(null);										
				
				//create chart								
				chart=ChartFactory.createXYLineChart(title,xlabel,ylabel,xyDataset,PlotOrientation.VERTICAL,true,false,false);
				
				break;	
			case -6:
				//time series
				
				//create dataset for time series chart
				artTimeSeries timeSeriesChart=new artTimeSeries();								
				timeSeriesChart.prepareDataset(rs);				
				TimeSeriesCollection timeSeriesDataset=(TimeSeriesCollection) timeSeriesChart.produceDataset(null);
				
				//create chart				
				chart=ChartFactory.createTimeSeriesChart(title,xlabel,ylabel,timeSeriesDataset,true,false,false);
				
				break;
			case -7:
				//date series
				
				//create dataset for date series chart
				artDateSeries dateSeriesChart=new artDateSeries();								
				dateSeriesChart.prepareDataset(rs);				
				TimeSeriesCollection dateSeriesDataset=(TimeSeriesCollection)dateSeriesChart.produceDataset(null);
				
				//create chart				
				chart=ChartFactory.createTimeSeriesChart(title,xlabel,ylabel,dateSeriesDataset,true,false,false);

				break;
			default:
				//charts that use the category dataset. bar and line graphs	
				
				//create dataset for chart
				artCategoriesSeries categoryChart=new artCategoriesSeries();								
				categoryChart.prepareDataset(rs);				
				DefaultCategoryDataset chartDataset=(DefaultCategoryDataset) categoryChart.produceDataset(null);
				
				//create appropriate chart
				switch(queryType)
				{					
				case -3:					
					//horizontal bar graph 3d
					chart=ChartFactory.createBarChart3D(title,xlabel,ylabel,chartDataset,PlotOrientation.HORIZONTAL,true,false,false);						
					break;
				case -4:					
					//vertical bar graph 3d
					chart=ChartFactory.createBarChart3D(title,xlabel,ylabel,chartDataset,PlotOrientation.VERTICAL,true,false,false);						
					break;
				case -5:					
					//line graph
					chart=ChartFactory.createLineChart(title,xlabel,ylabel,chartDataset,PlotOrientation.VERTICAL,true,false,false);
					break;
				case -8:					
					//stacked vertical bar graph 3d
					chart=ChartFactory.createStackedBarChart3D(title,xlabel,ylabel,chartDataset,PlotOrientation.VERTICAL,true,false,false);						
					break;
				case -9:					
					//stacked horizontal bar graph 3d
					chart=ChartFactory.createStackedBarChart3D(title,xlabel,ylabel,chartDataset,PlotOrientation.HORIZONTAL,true,false,false);						
					break;
				}				
			}
				
			//save chart as png or pdf  file	
			if (chart!=null) {
				if (output.equals("png")) {
					fullFileName = fullFileNameWithoutExt+".png";
					ChartUtilities.saveChartAsPNG(new File(fullFileName),chart,width,height);
				} else if (output.equals("pdf")) {
					fullFileName = fullFileNameWithoutExt+".pdf";
					PdfGraph.createPdf(chart, fullFileName, title)	;
				}	
			}

			}
		catch(Exception e){
			System.out.println(e);
		}	
	}
}

