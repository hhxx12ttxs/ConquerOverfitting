/* Auto-generated by genmsg_java.py for file /opt/ros/fuerte/stacks/arm_navigation/arm_navigation_msgs/msg/JointConstraint.msg */

package ros.pkg.arm_navigation_msgs.msg;

import java.nio.ByteBuffer;

public class JointConstraint extends ros.communication.Message {

  public java.lang.String joint_name = new java.lang.String();
  public double position;
  public double tolerance_above;
  public double tolerance_below;
  public double weight;

  public JointConstraint() {
  }

  public static java.lang.String __s_getDataType() { return "arm_navigation_msgs/JointConstraint"; }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public static java.lang.String __s_getMD5Sum() { return "c02a15146bec0ce13564807805b008f0"; }
  public java.lang.String getMD5Sum() { return __s_getMD5Sum(); }
  public static java.lang.String __s_getMessageDefinition() { return "# Constrain the position of a joint to be within a certain bound\n" +
"string joint_name\n" +
"\n" +
"# the bound to be achieved is [position - tolerance_below, position + tolerance_above]\n" +
"float64 position\n" +
"float64 tolerance_above\n" +
"float64 tolerance_below\n" +
"\n" +
"# A weighting factor for this constraint\n" +
"float64 weight\n" +
""; }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }

  public JointConstraint clone() {
    JointConstraint c = new JointConstraint();
    c.deserialize(serialize(0));
    return c;
  }

  public void setTo(ros.communication.Message m) {
    deserialize(m.serialize(0));
  }

  public int serializationLength() {
    int __l = 0;
    __l += 4 + joint_name.length();
    __l += 8; // position
    __l += 8; // tolerance_above
    __l += 8; // tolerance_below
    __l += 8; // weight
    return __l;
  }

  public void serialize(ByteBuffer bb, int seq) {
    Serialization.writeString(bb, joint_name);
    bb.putDouble(position);
    bb.putDouble(tolerance_above);
    bb.putDouble(tolerance_below);
    bb.putDouble(weight);
  }

  public void deserialize(ByteBuffer bb) {
    joint_name = Serialization.readString(bb);
    position = bb.getDouble();
    tolerance_above = bb.getDouble();
    tolerance_below = bb.getDouble();
    weight = bb.getDouble();
  }

  @SuppressWarnings("all")
  public boolean equals(Object o) {
    if(!(o instanceof JointConstraint))
      return false;
    JointConstraint other = (JointConstraint) o;
    return
      joint_name.equals(other.joint_name) &&
      position == other.position &&
      tolerance_above == other.tolerance_above &&
      tolerance_below == other.tolerance_below &&
      weight == other.weight &&
      true;
  }

  @SuppressWarnings("all")
  public int hashCode() {
    final int prime = 31;
    int result = 1;
    long tmp;
    result = prime * result + (this.joint_name == null ? 0 : this.joint_name.hashCode());
    result = prime * result + (int)((tmp = Double.doubleToLongBits(this.position)) ^ (tmp >>> 32));
    result = prime * result + (int)((tmp = Double.doubleToLongBits(this.tolerance_above)) ^ (tmp >>> 32));
    result = prime * result + (int)((tmp = Double.doubleToLongBits(this.tolerance_below)) ^ (tmp >>> 32));
    result = prime * result + (int)((tmp = Double.doubleToLongBits(this.weight)) ^ (tmp >>> 32));
    return result;
  }
} // class JointConstraint


