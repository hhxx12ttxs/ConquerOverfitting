/*
* generated by Xtext
*/

package org.xtext.example.mydsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class IntentModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntentModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIntentModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNameModelKeyword_1_0 = (Keyword)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIntentsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIntentsIntentParserRuleCall_5_0 = (RuleCall)cIntentsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cIntentsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cIntentsIntentParserRuleCall_7_2_0 = (RuleCall)cIntentsAssignment_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//IntentModel:
		//	{IntentModel} name="Model" "=" "[" "{" intents+=Intent "}" ("," "{" intents+=Intent "}")* "]";
		public ParserRule getRule() { return rule; }

		//{IntentModel} name="Model" "=" "[" "{" intents+=Intent "}" ("," "{" intents+=Intent "}")* "]"
		public Group getGroup() { return cGroup; }

		//{IntentModel}
		public Action getIntentModelAction_0() { return cIntentModelAction_0; }

		//name="Model"
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//"Model"
		public Keyword getNameModelKeyword_1_0() { return cNameModelKeyword_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//intents+=Intent
		public Assignment getIntentsAssignment_5() { return cIntentsAssignment_5; }

		//Intent
		public RuleCall getIntentsIntentParserRuleCall_5_0() { return cIntentsIntentParserRuleCall_5_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }

		//("," "{" intents+=Intent "}")*
		public Group getGroup_7() { return cGroup_7; }

		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//intents+=Intent
		public Assignment getIntentsAssignment_7_2() { return cIntentsAssignment_7_2; }

		//Intent
		public RuleCall getIntentsIntentParserRuleCall_7_2_0() { return cIntentsIntentParserRuleCall_7_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }
	}

	public class IntentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Intent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final RuleCall cExplicitIntentParserRuleCall_2_0 = (RuleCall)cAlternatives_2.eContents().get(0);
		private final RuleCall cImplicitIntentParserRuleCall_2_1 = (RuleCall)cAlternatives_2.eContents().get(1);
		private final RuleCall cBroadcastIntentParserRuleCall_2_2 = (RuleCall)cAlternatives_2.eContents().get(2);
		private final RuleCall cServiceIntentParserRuleCall_2_3 = (RuleCall)cAlternatives_2.eContents().get(3);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cGroup_4.eContents().get(0);
		private final Keyword cNameKeyword_4_0_0 = (Keyword)cGroup_4_0.eContents().get(0);
		private final Keyword cColonKeyword_4_0_1 = (Keyword)cGroup_4_0.eContents().get(1);
		private final Assignment cNameAssignment_4_0_2 = (Assignment)cGroup_4_0.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_4_0_2_0 = (RuleCall)cNameAssignment_4_0_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_0_3 = (Keyword)cGroup_4_0.eContents().get(3);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cActionKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Keyword cColonKeyword_4_1_1 = (Keyword)cGroup_4_1.eContents().get(1);
		private final Assignment cActionAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cActionEStringParserRuleCall_4_1_2_0 = (RuleCall)cActionAssignment_4_1_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCategoryKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Keyword cColonKeyword_4_2_1 = (Keyword)cGroup_4_2.eContents().get(1);
		private final Assignment cCategoryAssignment_4_2_2 = (Assignment)cGroup_4_2.eContents().get(2);
		private final RuleCall cCategoryEStringParserRuleCall_4_2_2_0 = (RuleCall)cCategoryAssignment_4_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_2_3 = (Keyword)cGroup_4_2.eContents().get(3);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cMetaCategoryKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Keyword cColonKeyword_4_3_1 = (Keyword)cGroup_4_3.eContents().get(1);
		private final Assignment cMetaCategoryAssignment_4_3_2 = (Assignment)cGroup_4_3.eContents().get(2);
		private final RuleCall cMetaCategoryEStringParserRuleCall_4_3_2_0 = (RuleCall)cMetaCategoryAssignment_4_3_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_3_3 = (Keyword)cGroup_4_3.eContents().get(3);
		private final Group cGroup_4_4 = (Group)cGroup_4.eContents().get(4);
		private final Keyword cDataURIKeyword_4_4_0 = (Keyword)cGroup_4_4.eContents().get(0);
		private final Keyword cColonKeyword_4_4_1 = (Keyword)cGroup_4_4.eContents().get(1);
		private final Assignment cDataURIAssignment_4_4_2 = (Assignment)cGroup_4_4.eContents().get(2);
		private final RuleCall cDataURIEStringParserRuleCall_4_4_2_0 = (RuleCall)cDataURIAssignment_4_4_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_4_3 = (Keyword)cGroup_4_4.eContents().get(3);
		private final Group cGroup_4_5 = (Group)cGroup_4.eContents().get(5);
		private final Keyword cPermissionKeyword_4_5_0 = (Keyword)cGroup_4_5.eContents().get(0);
		private final Keyword cColonKeyword_4_5_1 = (Keyword)cGroup_4_5.eContents().get(1);
		private final Assignment cPermissionAssignment_4_5_2 = (Assignment)cGroup_4_5.eContents().get(2);
		private final RuleCall cPermissionEStringParserRuleCall_4_5_2_0 = (RuleCall)cPermissionAssignment_4_5_2.eContents().get(0);
		private final Keyword cCommaKeyword_4_5_3 = (Keyword)cGroup_4_5.eContents().get(3);
		private final Group cGroup_4_6 = (Group)cGroup_4.eContents().get(6);
		private final Keyword cDataExtraKeyword_4_6_0 = (Keyword)cGroup_4_6.eContents().get(0);
		private final Keyword cColonKeyword_4_6_1 = (Keyword)cGroup_4_6.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_4_6_2 = (Keyword)cGroup_4_6.eContents().get(2);
		private final Group cGroup_4_6_3 = (Group)cGroup_4_6.eContents().get(3);
		private final Keyword cCommaKeyword_4_6_3_0 = (Keyword)cGroup_4_6_3.eContents().get(0);
		private final Assignment cExtraDataAssignment_4_6_3_1 = (Assignment)cGroup_4_6_3.eContents().get(1);
		private final RuleCall cExtraDataExtraDataParserRuleCall_4_6_3_1_0 = (RuleCall)cExtraDataAssignment_4_6_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_6_4 = (Keyword)cGroup_4_6.eContents().get(4);
		private final Keyword cCommaKeyword_4_6_5 = (Keyword)cGroup_4_6.eContents().get(5);
		private final Group cGroup_4_7 = (Group)cGroup_4.eContents().get(7);
		private final Keyword cReturnDataKeyword_4_7_0 = (Keyword)cGroup_4_7.eContents().get(0);
		private final Keyword cColonKeyword_4_7_1 = (Keyword)cGroup_4_7.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_4_7_2 = (Keyword)cGroup_4_7.eContents().get(2);
		private final Group cGroup_4_7_3 = (Group)cGroup_4_7.eContents().get(3);
		private final Keyword cCommaKeyword_4_7_3_0 = (Keyword)cGroup_4_7_3.eContents().get(0);
		private final Assignment cReturnDataAssignment_4_7_3_1 = (Assignment)cGroup_4_7_3.eContents().get(1);
		private final RuleCall cReturnDataExtraDataParserRuleCall_4_7_3_1_0 = (RuleCall)cReturnDataAssignment_4_7_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_7_4 = (Keyword)cGroup_4_7.eContents().get(4);
		
		//Intent:
		//	"Type" ":" (ExplicitIntent | ImplicitIntent | BroadcastIntent | ServiceIntent) "," (("Name" ":" name=EString ",")
		//	("Action" ":" action=EString ",") ("Category" ":" category=EString ",")? ("Meta-Category" ":" metaCategory=EString
		//	",") ("DataURI" ":" dataURI=EString ",")? ("Permission" ":" permission=EString ",")? ("DataExtra" ":" "[" (","?
		//	extraData+=ExtraData)* "]" ",")? ("ReturnData" ":" "[" (","? returnData+=ExtraData)* "]")?);
		public ParserRule getRule() { return rule; }

		//"Type" ":" (ExplicitIntent | ImplicitIntent | BroadcastIntent | ServiceIntent) "," (("Name" ":" name=EString ",")
		//("Action" ":" action=EString ",") ("Category" ":" category=EString ",")? ("Meta-Category" ":" metaCategory=EString ",")
		//("DataURI" ":" dataURI=EString ",")? ("Permission" ":" permission=EString ",")? ("DataExtra" ":" "[" (","?
		//extraData+=ExtraData)* "]" ",")? ("ReturnData" ":" "[" (","? returnData+=ExtraData)* "]")?)
		public Group getGroup() { return cGroup; }

		//"Type"
		public Keyword getTypeKeyword_0() { return cTypeKeyword_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//ExplicitIntent | ImplicitIntent | BroadcastIntent | ServiceIntent
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//ExplicitIntent
		public RuleCall getExplicitIntentParserRuleCall_2_0() { return cExplicitIntentParserRuleCall_2_0; }

		//ImplicitIntent
		public RuleCall getImplicitIntentParserRuleCall_2_1() { return cImplicitIntentParserRuleCall_2_1; }

		//BroadcastIntent
		public RuleCall getBroadcastIntentParserRuleCall_2_2() { return cBroadcastIntentParserRuleCall_2_2; }

		//ServiceIntent
		public RuleCall getServiceIntentParserRuleCall_2_3() { return cServiceIntentParserRuleCall_2_3; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//("Name" ":" name=EString ",") ("Action" ":" action=EString ",") ("Category" ":" category=EString ",")? ("Meta-Category"
		//":" metaCategory=EString ",") ("DataURI" ":" dataURI=EString ",")? ("Permission" ":" permission=EString ",")?
		//("DataExtra" ":" "[" (","? extraData+=ExtraData)* "]" ",")? ("ReturnData" ":" "[" (","? returnData+=ExtraData)* "]")?
		public Group getGroup_4() { return cGroup_4; }

		//"Name" ":" name=EString ","
		public Group getGroup_4_0() { return cGroup_4_0; }

		//"Name"
		public Keyword getNameKeyword_4_0_0() { return cNameKeyword_4_0_0; }

		//":"
		public Keyword getColonKeyword_4_0_1() { return cColonKeyword_4_0_1; }

		//name=EString
		public Assignment getNameAssignment_4_0_2() { return cNameAssignment_4_0_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_4_0_2_0() { return cNameEStringParserRuleCall_4_0_2_0; }

		//","
		public Keyword getCommaKeyword_4_0_3() { return cCommaKeyword_4_0_3; }

		//"Action" ":" action=EString ","
		public Group getGroup_4_1() { return cGroup_4_1; }

		//"Action"
		public Keyword getActionKeyword_4_1_0() { return cActionKeyword_4_1_0; }

		//":"
		public Keyword getColonKeyword_4_1_1() { return cColonKeyword_4_1_1; }

		//action=EString
		public Assignment getActionAssignment_4_1_2() { return cActionAssignment_4_1_2; }

		//EString
		public RuleCall getActionEStringParserRuleCall_4_1_2_0() { return cActionEStringParserRuleCall_4_1_2_0; }

		//","
		public Keyword getCommaKeyword_4_1_3() { return cCommaKeyword_4_1_3; }

		//("Category" ":" category=EString ",")?
		public Group getGroup_4_2() { return cGroup_4_2; }

		//"Category"
		public Keyword getCategoryKeyword_4_2_0() { return cCategoryKeyword_4_2_0; }

		//":"
		public Keyword getColonKeyword_4_2_1() { return cColonKeyword_4_2_1; }

		//category=EString
		public Assignment getCategoryAssignment_4_2_2() { return cCategoryAssignment_4_2_2; }

		//EString
		public RuleCall getCategoryEStringParserRuleCall_4_2_2_0() { return cCategoryEStringParserRuleCall_4_2_2_0; }

		//","
		public Keyword getCommaKeyword_4_2_3() { return cCommaKeyword_4_2_3; }

		//"Meta-Category" ":" metaCategory=EString ","
		public Group getGroup_4_3() { return cGroup_4_3; }

		//"Meta-Category"
		public Keyword getMetaCategoryKeyword_4_3_0() { return cMetaCategoryKeyword_4_3_0; }

		//":"
		public Keyword getColonKeyword_4_3_1() { return cColonKeyword_4_3_1; }

		//metaCategory=EString
		public Assignment getMetaCategoryAssignment_4_3_2() { return cMetaCategoryAssignment_4_3_2; }

		//EString
		public RuleCall getMetaCategoryEStringParserRuleCall_4_3_2_0() { return cMetaCategoryEStringParserRuleCall_4_3_2_0; }

		//","
		public Keyword getCommaKeyword_4_3_3() { return cCommaKeyword_4_3_3; }

		//("DataURI" ":" dataURI=EString ",")?
		public Group getGroup_4_4() { return cGroup_4_4; }

		//"DataURI"
		public Keyword getDataURIKeyword_4_4_0() { return cDataURIKeyword_4_4_0; }

		//":"
		public Keyword getColonKeyword_4_4_1() { return cColonKeyword_4_4_1; }

		//dataURI=EString
		public Assignment getDataURIAssignment_4_4_2() { return cDataURIAssignment_4_4_2; }

		//EString
		public RuleCall getDataURIEStringParserRuleCall_4_4_2_0() { return cDataURIEStringParserRuleCall_4_4_2_0; }

		//","
		public Keyword getCommaKeyword_4_4_3() { return cCommaKeyword_4_4_3; }

		//("Permission" ":" permission=EString ",")?
		public Group getGroup_4_5() { return cGroup_4_5; }

		//"Permission"
		public Keyword getPermissionKeyword_4_5_0() { return cPermissionKeyword_4_5_0; }

		//":"
		public Keyword getColonKeyword_4_5_1() { return cColonKeyword_4_5_1; }

		//permission=EString
		public Assignment getPermissionAssignment_4_5_2() { return cPermissionAssignment_4_5_2; }

		//EString
		public RuleCall getPermissionEStringParserRuleCall_4_5_2_0() { return cPermissionEStringParserRuleCall_4_5_2_0; }

		//","
		public Keyword getCommaKeyword_4_5_3() { return cCommaKeyword_4_5_3; }

		//("DataExtra" ":" "[" (","? extraData+=ExtraData)* "]" ",")?
		public Group getGroup_4_6() { return cGroup_4_6; }

		//"DataExtra"
		public Keyword getDataExtraKeyword_4_6_0() { return cDataExtraKeyword_4_6_0; }

		//":"
		public Keyword getColonKeyword_4_6_1() { return cColonKeyword_4_6_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_6_2() { return cLeftSquareBracketKeyword_4_6_2; }

		//(","? extraData+=ExtraData)*
		public Group getGroup_4_6_3() { return cGroup_4_6_3; }

		//","?
		public Keyword getCommaKeyword_4_6_3_0() { return cCommaKeyword_4_6_3_0; }

		//extraData+=ExtraData
		public Assignment getExtraDataAssignment_4_6_3_1() { return cExtraDataAssignment_4_6_3_1; }

		//ExtraData
		public RuleCall getExtraDataExtraDataParserRuleCall_4_6_3_1_0() { return cExtraDataExtraDataParserRuleCall_4_6_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_6_4() { return cRightSquareBracketKeyword_4_6_4; }

		//","
		public Keyword getCommaKeyword_4_6_5() { return cCommaKeyword_4_6_5; }

		//("ReturnData" ":" "[" (","? returnData+=ExtraData)* "]")?
		public Group getGroup_4_7() { return cGroup_4_7; }

		//"ReturnData"
		public Keyword getReturnDataKeyword_4_7_0() { return cReturnDataKeyword_4_7_0; }

		//":"
		public Keyword getColonKeyword_4_7_1() { return cColonKeyword_4_7_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_7_2() { return cLeftSquareBracketKeyword_4_7_2; }

		//(","? returnData+=ExtraData)*
		public Group getGroup_4_7_3() { return cGroup_4_7_3; }

		//","?
		public Keyword getCommaKeyword_4_7_3_0() { return cCommaKeyword_4_7_3_0; }

		//returnData+=ExtraData
		public Assignment getReturnDataAssignment_4_7_3_1() { return cReturnDataAssignment_4_7_3_1; }

		//ExtraData
		public RuleCall getReturnDataExtraDataParserRuleCall_4_7_3_1_0() { return cReturnDataExtraDataParserRuleCall_4_7_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_7_4() { return cRightSquareBracketKeyword_4_7_4; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class ExtraDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExtraData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExtraDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cColonKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTypeAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTypeSimpleTypeEnumEnumRuleCall_4_2_0 = (RuleCall)cTypeAssignment_4_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ExtraData:
		//	{ExtraData} "{" ("Name" ":" name=EString) "," ("Type" ":" type=SimpleTypeEnum) "}";
		public ParserRule getRule() { return rule; }

		//{ExtraData} "{" ("Name" ":" name=EString) "," ("Type" ":" type=SimpleTypeEnum) "}"
		public Group getGroup() { return cGroup; }

		//{ExtraData}
		public Action getExtraDataAction_0() { return cExtraDataAction_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"Name" ":" name=EString
		public Group getGroup_2() { return cGroup_2; }

		//"Name"
		public Keyword getNameKeyword_2_0() { return cNameKeyword_2_0; }

		//":"
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }

		//name=EString
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_2_0() { return cNameEStringParserRuleCall_2_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"Type" ":" type=SimpleTypeEnum
		public Group getGroup_4() { return cGroup_4; }

		//"Type"
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }

		//":"
		public Keyword getColonKeyword_4_1() { return cColonKeyword_4_1; }

		//type=SimpleTypeEnum
		public Assignment getTypeAssignment_4_2() { return cTypeAssignment_4_2; }

		//SimpleTypeEnum
		public RuleCall getTypeSimpleTypeEnumEnumRuleCall_4_2_0() { return cTypeSimpleTypeEnumEnumRuleCall_4_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ExplicitIntentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExplicitIntent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cExplicitIntentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cExplicitIntentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ExplicitIntent:
		//	{ExplicitIntent} "\'ExplicitIntent\'";
		public ParserRule getRule() { return rule; }

		//{ExplicitIntent} "\'ExplicitIntent\'"
		public Group getGroup() { return cGroup; }

		//{ExplicitIntent}
		public Action getExplicitIntentAction_0() { return cExplicitIntentAction_0; }

		//"\'ExplicitIntent\'"
		public Keyword getExplicitIntentKeyword_1() { return cExplicitIntentKeyword_1; }
	}

	public class ImplicitIntentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImplicitIntent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cImplicitIntentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cImplicitIntentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ImplicitIntent:
		//	{ImplicitIntent} "\'ImplicitIntent\'";
		public ParserRule getRule() { return rule; }

		//{ImplicitIntent} "\'ImplicitIntent\'"
		public Group getGroup() { return cGroup; }

		//{ImplicitIntent}
		public Action getImplicitIntentAction_0() { return cImplicitIntentAction_0; }

		//"\'ImplicitIntent\'"
		public Keyword getImplicitIntentKeyword_1() { return cImplicitIntentKeyword_1; }
	}

	public class BroadcastIntentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BroadcastIntent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBroadCastIntentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBroadcastIntentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//BroadcastIntent returns BroadCastIntent:
		//	{BroadCastIntent} "\'BroadcastIntent\'";
		public ParserRule getRule() { return rule; }

		//{BroadCastIntent} "\'BroadcastIntent\'"
		public Group getGroup() { return cGroup; }

		//{BroadCastIntent}
		public Action getBroadCastIntentAction_0() { return cBroadCastIntentAction_0; }

		//"\'BroadcastIntent\'"
		public Keyword getBroadcastIntentKeyword_1() { return cBroadcastIntentKeyword_1; }
	}

	public class ServiceIntentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceIntent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cServiceIntentAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cServiceIntentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ServiceIntent:
		//	{ServiceIntent} "\'ServiceIntent\'";
		public ParserRule getRule() { return rule; }

		//{ServiceIntent} "\'ServiceIntent\'"
		public Group getGroup() { return cGroup; }

		//{ServiceIntent}
		public Action getServiceIntentAction_0() { return cServiceIntentAction_0; }

		//"\'ServiceIntent\'"
		public Keyword getServiceIntentKeyword_1() { return cServiceIntentKeyword_1; }
	}
	
	
	public class SimpleTypeEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleTypeEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBOOLEANEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBOOLEANBooleanKeyword_0_0 = (Keyword)cBOOLEANEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBUNDLEEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBUNDLEBundleKeyword_1_0 = (Keyword)cBUNDLEEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBYTEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBYTEByteKeyword_2_0 = (Keyword)cBYTEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDOUBLEEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDOUBLEDoubleKeyword_3_0 = (Keyword)cDOUBLEEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cFLOATFloatKeyword_4_0 = (Keyword)cFLOATEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cINTEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cINTIntegerKeyword_5_0 = (Keyword)cINTEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cLONGEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cLONGLongKeyword_6_0 = (Keyword)cLONGEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cSHORTEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cSHORTShortKeyword_7_0 = (Keyword)cSHORTEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cSTRINGEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cSTRINGStringKeyword_8_0 = (Keyword)cSTRINGEnumLiteralDeclaration_8.eContents().get(0);
		
		//// Just to make it easier for developers to chose a datatype (and reduce errors)
		//enum SimpleTypeEnum:
		//	BOOLEAN="boolean" | BUNDLE="Bundle" | BYTE="byte" | DOUBLE="double" | FLOAT="float" | INT="integer" | LONG="long" |
		//	SHORT="short" | STRING="String";
		public EnumRule getRule() { return rule; }

		//BOOLEAN="boolean" | BUNDLE="Bundle" | BYTE="byte" | DOUBLE="double" | FLOAT="float" | INT="integer" | LONG="long" |
		//SHORT="short" | STRING="String"
		public Alternatives getAlternatives() { return cAlternatives; }

		//BOOLEAN="boolean"
		public EnumLiteralDeclaration getBOOLEANEnumLiteralDeclaration_0() { return cBOOLEANEnumLiteralDeclaration_0; }

		//"boolean"
		public Keyword getBOOLEANBooleanKeyword_0_0() { return cBOOLEANBooleanKeyword_0_0; }

		//BUNDLE="Bundle"
		public EnumLiteralDeclaration getBUNDLEEnumLiteralDeclaration_1() { return cBUNDLEEnumLiteralDeclaration_1; }

		//"Bundle"
		public Keyword getBUNDLEBundleKeyword_1_0() { return cBUNDLEBundleKeyword_1_0; }

		//BYTE="byte"
		public EnumLiteralDeclaration getBYTEEnumLiteralDeclaration_2() { return cBYTEEnumLiteralDeclaration_2; }

		//"byte"
		public Keyword getBYTEByteKeyword_2_0() { return cBYTEByteKeyword_2_0; }

		//DOUBLE="double"
		public EnumLiteralDeclaration getDOUBLEEnumLiteralDeclaration_3() { return cDOUBLEEnumLiteralDeclaration_3; }

		//"double"
		public Keyword getDOUBLEDoubleKeyword_3_0() { return cDOUBLEDoubleKeyword_3_0; }

		//FLOAT="float"
		public EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_4() { return cFLOATEnumLiteralDeclaration_4; }

		//"float"
		public Keyword getFLOATFloatKeyword_4_0() { return cFLOATFloatKeyword_4_0; }

		//INT="integer"
		public EnumLiteralDeclaration getINTEnumLiteralDeclaration_5() { return cINTEnumLiteralDeclaration_5; }

		//"integer"
		public Keyword getINTIntegerKeyword_5_0() { return cINTIntegerKeyword_5_0; }

		//LONG="long"
		public EnumLiteralDeclaration getLONGEnumLiteralDeclaration_6() { return cLONGEnumLiteralDeclaration_6; }

		//"long"
		public Keyword getLONGLongKeyword_6_0() { return cLONGLongKeyword_6_0; }

		//SHORT="short"
		public EnumLiteralDeclaration getSHORTEnumLiteralDeclaration_7() { return cSHORTEnumLiteralDeclaration_7; }

		//"short"
		public Keyword getSHORTShortKeyword_7_0() { return cSHORTShortKeyword_7_0; }

		//STRING="String"
		public EnumLiteralDeclaration getSTRINGEnumLiteralDeclaration_8() { return cSTRINGEnumLiteralDeclaration_8; }

		//"String"
		public Keyword getSTRINGStringKeyword_8_0() { return cSTRINGStringKeyword_8_0; }
	}
	
	private IntentModelElements pIntentModel;
	private IntentElements pIntent;
	private EStringElements pEString;
	private ExtraDataElements pExtraData;
	private SimpleTypeEnumElements unknownRuleSimpleTypeEnum;
	private ExplicitIntentElements pExplicitIntent;
	private ImplicitIntentElements pImplicitIntent;
	private BroadcastIntentElements pBroadcastIntent;
	private ServiceIntentElements pServiceIntent;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//IntentModel:
	//	{IntentModel} name="Model" "=" "[" "{" intents+=Intent "}" ("," "{" intents+=Intent "}")* "]";
	public IntentModelElements getIntentModelAccess() {
		return (pIntentModel != null) ? pIntentModel : (pIntentModel = new IntentModelElements());
	}
	
	public ParserRule getIntentModelRule() {
		return getIntentModelAccess().getRule();
	}

	//Intent:
	//	"Type" ":" (ExplicitIntent | ImplicitIntent | BroadcastIntent | ServiceIntent) "," (("Name" ":" name=EString ",")
	//	("Action" ":" action=EString ",") ("Category" ":" category=EString ",")? ("Meta-Category" ":" metaCategory=EString
	//	",") ("DataURI" ":" dataURI=EString ",")? ("Permission" ":" permission=EString ",")? ("DataExtra" ":" "[" (","?
	//	extraData+=ExtraData)* "]" ",")? ("ReturnData" ":" "[" (","? returnData+=ExtraData)* "]")?);
	public IntentElements getIntentAccess() {
		return (pIntent != null) ? pIntent : (pIntent = new IntentElements());
	}
	
	public ParserRule getIntentRule() {
		return getIntentAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//ExtraData:
	//	{ExtraData} "{" ("Name" ":" name=EString) "," ("Type" ":" type=SimpleTypeEnum) "}";
	public ExtraDataElements getExtraDataAccess() {
		return (pExtraData != null) ? pExtraData : (pExtraData = new ExtraDataElements());
	}
	
	public ParserRule getExtraDataRule() {
		return getExtraDataAccess().getRule();
	}

	//// Just to make it easier for developers to chose a datatype (and reduce errors)
	//enum SimpleTypeEnum:
	//	BOOLEAN="boolean" | BUNDLE="Bundle" | BYTE="byte" | DOUBLE="double" | FLOAT="float" | INT="integer" | LONG="long" |
	//	SHORT="short" | STRING="String";
	public SimpleTypeEnumElements getSimpleTypeEnumAccess() {
		return (unknownRuleSimpleTypeEnum != null) ? unknownRuleSimpleTypeEnum : (unknownRuleSimpleTypeEnum = new SimpleTypeEnumElements());
	}
	
	public EnumRule getSimpleTypeEnumRule() {
		return getSimpleTypeEnumAccess().getRule();
	}

	//ExplicitIntent:
	//	{ExplicitIntent} "\'ExplicitIntent\'";
	public ExplicitIntentElements getExplicitIntentAccess() {
		return (pExplicitIntent != null) ? pExplicitIntent : (pExplicitIntent = new ExplicitIntentElements());
	}
	
	public ParserRule getExplicitIntentRule() {
		return getExplicitIntentAccess().getRule();
	}

	//ImplicitIntent:
	//	{ImplicitIntent} "\'ImplicitIntent\'";
	public ImplicitIntentElements getImplicitIntentAccess() {
		return (pImplicitIntent != null) ? pImplicitIntent : (pImplicitIntent = new ImplicitIntentElements());
	}
	
	public ParserRule getImplicitIntentRule() {
		return getImplicitIntentAccess().getRule();
	}

	//BroadcastIntent returns BroadCastIntent:
	//	{BroadCastIntent} "\'BroadcastIntent\'";
	public BroadcastIntentElements getBroadcastIntentAccess() {
		return (pBroadcastIntent != null) ? pBroadcastIntent : (pBroadcastIntent = new BroadcastIntentElements());
	}
	
	public ParserRule getBroadcastIntentRule() {
		return getBroadcastIntentAccess().getRule();
	}

	//ServiceIntent:
	//	{ServiceIntent} "\'ServiceIntent\'";
	public ServiceIntentElements getServiceIntentAccess() {
		return (pServiceIntent != null) ? pServiceIntent : (pServiceIntent = new ServiceIntentElements());
	}
	
	public ParserRule getServiceIntentRule() {
		return getServiceIntentAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}

