{"matchterm": "if len", "previouspage": null, "searchterm": "if len", "query": "if len", "language_filters": [{"count": 5163, "id": 23, "language": "Java"}], "total": 5163, "results": [{"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 84, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/gl", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020187/", "md5hash": "add4f8b4635278ee8e567f6948aad38a", "lines": {"32": "  ", "64": "    if (len == oldlen) { /* suffix not removed */", "35": "    plural = steps.get(\"Plural\");", "36": "    unification = steps.get(\"Unification\");", "37": "    adverb = steps.get(\"Adverb\");", "65": "      len = verb.apply(s, len);", "15": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "16": " * See the License for the specific language governing permissions and", "17": " * limitations under the License.", "52": "    len = plural.apply(s, len);", "53": "    len = unification.apply(s, len);", "54": "    len = adverb.apply(s, len);", "63": "    len = noun.apply(s, len);", "30": "public class GalicianStemmer extends RSLPStemmerBase {", "31": "  private static final Step plural, unification, adverb, augmentative, noun, verb, vowel;"}, "id": 3020187, "filename": "GalicianStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 103, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/pt", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020283/", "md5hash": "405399260fedb790491c2ffbfad060a1", "lines": {"64": "        len = vowel.apply(s, len);", "48": "    assert s.length >= len + 1 : \"this stemmer requires an oversized array of at least 1\";", "59": "      oldlen = len;", "42": "  /**", "43": "   * @param s buffer, oversized to at least <code>len+1</code>", "44": "   * @param len initial valid length of buffer", "45": "   * @return new valid length, stemmed", "46": "   */", "47": "  public int stem(char s[], int len) {", "16": " * See the License for the specific language governing permissions and", "17": " * limitations under the License.", "57": "    ", "58": "    if (len == oldlen) { /* suffix not removed */", "15": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "62": "      ", "63": "      if (len == oldlen) { /* suffix not removed */"}, "id": 3020283, "filename": "PortugueseStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 146, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/util", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020423/", "md5hash": "74159bae09a176f81070f875f446e153", "lines": {"97": "  public void reserve(int num) {", "98": "    if (len + num > buf.length) resize(len + num);", "99": "  }", "132": "  public final void reset() {", "101": "  public void write(char b) {", "102": "    if (len >= buf.length) {", "103": "      resize(len +1);", "15": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "16": " * See the License for the specific language governing permissions and", "17": " * limitations under the License.", "24": "  protected char[] buf;", "25": "  protected int len;", "26": "", "134": "  }", "133": "    len =0;"}, "id": 3020423, "filename": "OpenStringBuilder.java"}, {"repo": "https://code.google.com/p/fan/", "language": "Java", "linescount": 81, "location": "/src/sys/java/fanx/fcode", "name": "fan", "url": "https://searchcode.com/codesearch/view/3453522/", "md5hash": "ed07a5dab4418d504aba5bcbb74a140c", "lines": {"32": "    this.buf = buf;", "33": "    this.len = len;", "34": "  }", "65": "    if (len == 0) return null;", "64": "    int len = in.u2();", "66": "", "48": "    {", "49": "      DataInputStream in = new DataInputStream(new ByteArrayInputStream(buf, 0, len));", "50": "      return in.readUTF();", "26": "    this.buf = box.buf;", "27": "    this.len = box.len;", "28": "  }", "29": "", "30": "  public FBuf(byte[] buf, int len)", "31": "  {"}, "id": 3453522, "filename": "FBuf.java"}, {"repo": "https://code.google.com/p/connectbot/", "language": "Java", "linescount": 161, "location": "/src/com/trilead/ssh2/crypto", "name": "connectbot", "url": "https://searchcode.com/codesearch/view/191414/", "md5hash": "8a0e25565eba8f171595c32223619069", "lines": {"98": "", "99": "\t\tif ((len < 0) || len > available())", "100": "\t\t\tthrow new IOException(\"Illegal len in DER object (\" + len  + \")\");", "134": "", "135": "\t\tif ((len < 0) || len > available())", "72": "", "73": "\t\tif ((len & 0x80) == 0)", "74": "\t\t\treturn len;", "115": "", "136": "\t\t\tthrow new IOException(\"Illegal len in DER object (\" + len  + \")\");", "50": "\t{", "51": "\t\tif (len > count)", "52": "\t\t\tthrow new IOException(\"DER byte array: out of data\");", "117": "\t\t\tthrow new IOException(\"Illegal len in DER object (\" + len  + \")\");", "116": "\t\tif ((len < 0) || len > available())"}, "id": 191414, "filename": "SimpleDERReader.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 1144, "location": "/plugins/Xrefactory/trunk/com/xrefactory/jedit", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1383254/", "md5hash": "63e936516e88295325ddbc857ae9078f", "lines": {"144": "\t\tif (len>=2 && a.charAt(0)=='\"' && a.charAt(len-1)=='\"') {", "131": "\t\t\t}", "132": "\t\t\tif (i<len && c=='\"') i++;", "133": "\t\t} else {", "145": "\t\t\treturn(a.substring(1,len-1));", "143": "\t\tint len = a.length();", "112": "", "113": "\tpublic static int skipMyXmlIdentifier(XrefCharBuffer ss, int i, int len) {", "114": "\t\tchar\tc;", "163": "\t\ti = s.skipBlank(ss, i, len);", "164": "\t\tif (i>=len) throw new XrefException(\"parsing beyond end of communication string\");", "153": "\t\tString suffix=\"\";", "154": "\t\tif (j>=len) j=len;", "155": "\t\telse suffix=\" ...\";", "165": "\t\tif (ss.buf[i]!='<') {"}, "id": 1383254, "filename": "Dispatch.java"}, {"repo": "https://hg01.codeplex.com/lcms4bb", "language": "Java", "linescount": 2163, "location": "/src/littlecms/internal/helper", "name": "lcms4bb", "url": "https://searchcode.com/codesearch/view/2384674/", "md5hash": "773fe6c16bad6f75868f882790a45cf1", "lines": {"441": "                {", "418": "                    {", "419": "                        if (i < (len - 2))", "420": "                        {", "439": "                }", "440": "                if (actLen == 0)", "407": "                case VirtualPointer.StringUnicode:", "408": "                    actLen = vp.len[vp.dataPos]; //If valid data point exists then len exists too", "409": "                    break;", "410": "            }", "411": "            if (actLen == 0)", "412": "            {", "349": "\t\t\t\tint len = Utility.strlen(data);", "350": "\t\t\t\tif(len != data.length)", "351": "\t\t\t\t{"}, "id": 2384674, "filename": "VirtualPointer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 268, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/fr", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020141/", "md5hash": "59e6c78b4822361f521a6c580722317f", "lines": {"66": "  public int stem(char s[], int len) {", "67": "    if (len > 5 && s[len-1] == 'x') {", "68": "      if (s[len-3] == 'a' && s[len-2] == 'u' && s[len-4] != 'e')", "69": "        s[len-2] = 'l';", "72": "    ", "73": "    if (len > 3 && s[len-1] == 'x')", "74": "      len--;", "75": "    ", "76": "    if (len > 3 && s[len-1] == 's')", "77": "      len--;", "78": "    ", "79": "    if (len > 9 && endsWith(s, len, \"issement\")) {", "80": "      len -= 6;", "84": "    ", "85": "    if (len > 8 && endsWith(s, len, \"issant\")) {", "86": "      len -= 4;"}, "id": 3020141, "filename": "FrenchLightStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 122, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/hi", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020161/", "md5hash": "d89aeff865cbd42a4088a32278a3f837", "lines": {"33": "    // 5", "34": "    if ((len > 6) && (endsWith(buffer, len, \"?????\")", "35": "        || endsWith(buffer, len, \"?????\")", "68": "        || endsWith(buffer, len, \"???\")", "111": "        || endsWith(buffer, len, \"?\")", "44": "    // 4", "66": "    // 3", "46": "        || endsWith(buffer, len, \"????\")", "45": "    if ((len > 5) && (endsWith(buffer, len, \"????\")", "67": "    if ((len > 4) && (endsWith(buffer, len, \"???\")", "110": "    if ((len > 2) && (endsWith(buffer, len, \"?\")", "89": "    // 2", "90": "    if ((len > 3) && (endsWith(buffer, len, \"??\")", "91": "        || endsWith(buffer, len, \"??\")", "109": "    // 1"}, "id": 3020161, "filename": "HindiStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 112, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/sv", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020183/", "md5hash": "e847f57e8de277ff427fdc4c21364de4", "lines": {"66": "  public int stem(char s[], int len) {   ", "67": "    if (len > 4 && s[len-1] == 's')", "68": "      len--;", "69": "    ", "70": "    if (len > 7 && ", "71": "        (endsWith(s, len, \"elser\") || ", "74": "    ", "75": "    if (len > 6 &&", "76": "        (endsWith(s, len, \"arne\") ||", "84": "    ", "85": "    if (len > 5 &&", "86": "        (endsWith(s, len, \"are\") ||", "90": "    ", "91": "    if (len > 4 &&", "92": "        (endsWith(s, len, \"ar\") ||"}, "id": 3020183, "filename": "SwedishLightStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 172, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/cz", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020235/", "md5hash": "a43997884094ae0d53f3648cac666198", "lines": {"103": "    ", "104": "    if (len > 3) {", "105": "      switch (s[len - 1]) {", "56": "        (endsWith(s, len,\"?tem\") ||", "51": "  private int removeCase(char s[], int len) {  ", "52": "    if (len > 7 && endsWith(s, len, \"atech\"))", "53": "      return len - 5;", "54": "    ", "55": "    if (len > 6 && ", "88": "    ", "89": "    if (len > 4 && ", "90": "        (endsWith(s, len, \"em\") ||", "60": "        ", "61": "    if (len > 5 && ", "62": "        (endsWith(s, len, \"ech\") ||"}, "id": 3020235, "filename": "CzechStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 260, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/fi", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020269/", "md5hash": "f9d64ed28c8a5d063756eaa2f582e679", "lines": {"96": "      if (endsWith(s, len, \"dellisuus\"))", "97": "        return len-9;", "66": "  public int stem(char s[], int len) {", "67": "    if (len < 4)", "68": "      return len;", "85": "  private int step1(char s[], int len) {", "86": "    if (len > 8) {", "87": "      if (endsWith(s, len, \"kin\"))", "88": "        return step1(s, len-3);", "89": "      if (endsWith(s, len, \"ko\"))", "90": "        return step1(s, len-2);", "92": "    ", "93": "    if (len > 11) {", "94": "      if (endsWith(s, len, \"dellinen\"))", "95": "        return len-8;"}, "id": 3020269, "filename": "FinnishLightStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 240, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/hu", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020276/", "md5hash": "981d56e3c663acf674fcbb5069bcfb66", "lines": {"109": "      ", "110": "      if (endsWith(s, len, \"al\") || endsWith(s, len, \"el\")) {", "111": "        if (!isVowel(s[len-3]) && s[len-3] == s[len-4])", "112": "          return len - 3;", "115": "    ", "116": "    if (len > 4) {", "117": "      if (endsWith(s, len, \"at\") ||", "118": "          endsWith(s, len, \"et\") ||", "89": "  private int removeCase(char s[], int len) {", "90": "    if (len > 6 && endsWith(s, len, \"kent\"))", "91": "      return len - 4;", "92": "    ", "93": "    if (len > 5) {", "94": "      if (endsWith(s, len, \"nak\") ||", "95": "          endsWith(s, len, \"nek\") ||"}, "id": 3020276, "filename": "HungarianLightStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 207, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/pt", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020280/", "md5hash": "242a5ab2a3623a6e8c1912667458f283", "lines": {"66": "  public int stem(char s[], int len) {", "67": "    if (len < 4)", "68": "      return len;", "71": "    ", "72": "    if (len > 3 && s[len-1] == 'a')", "73": "      len = normFeminine(s, len);", "74": "    ", "75": "    if (len > 4)", "76": "      switch(s[len-1]) {", "112": "  private int removeSuffix(char s[], int len) {", "113": "    if (len > 4 && endsWith(s, len, \"es\"))", "114": "      switch(s[len-3]) {", "120": "    ", "121": "    if (len > 3 && endsWith(s, len, \"ns\")) {", "122": "      s[len - 2] = 'm';"}, "id": 3020280, "filename": "PortugueseLightStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 139, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/de", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020315/", "md5hash": "5d7b68cf40738ff47647eb9415905f31", "lines": {"129": "    ", "130": "    if (len > 4 && s[len-2] == 'e' && (s[len-1] == 'r' || s[len-1] == 'n'))", "131": "      return len - 2;", "132": "    ", "133": "    if (len > 4 && s[len-2] == 's' && s[len-1] == 't' && stEnding(s[len-3]))", "134": "      return len - 2;", "105": "  private int step1(char s[], int len) {", "106": "    if (len > 5 && s[len-3] == 'e' && s[len-2] == 'r' && s[len-1] == 'n')", "107": "      return len - 3;", "108": "    ", "109": "    if (len > 4 && s[len-2] == 'e')", "110": "      switch(s[len-1]) {", "116": "    ", "117": "    if (len > 3 && s[len-1] == 'e')", "118": "      return len - 1;"}, "id": 3020315, "filename": "GermanLightStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 47, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/en", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020325/", "md5hash": "f9c990e298acb612e1e58406efc23a6b", "lines": {"32": "    ", "33": "    switch(s[len-2]) {", "34": "      case 'u':", "35": "      case 's': return len;", "36": "      case 'e':", "37": "        if (len > 3 && s[len-3] == 'i' && s[len-4] != 'a' && s[len-4] != 'e') {", "38": "          s[len - 3] = 'y';", "39": "          return len - 2;", "40": "        }", "41": "        if (s[len-3] == 'i' || s[len-3] == 'a' || s[len-3] == 'o' || s[len-3] == 'e')", "42": "          return len; /* intentional fallthrough */", "43": "      default: return len - 1;", "29": "  public int stem(char s[], int len) {", "30": "    if (len < 3 || s[len-1] != 's')", "31": "      return len;"}, "id": 3020325, "filename": "EnglishMinimalStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 154, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/ru", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020345/", "md5hash": "69e7b6e57dc32b9d5e8dbf026ed32c8a", "lines": {"71": "  private int normalize(char s[], int len) {", "72": "    if (len > 3)", "73": "      switch(s[len-1]) { ", "106": "        (endsWith(s, len, \"??\") ||", "75": "        case '?': return len - 1;", "76": "        case '?': if (s[len-2] == '?') return len - 1;", "77": "      }", "81": "  private int removeCase(char s[], int len) {", "82": "    if (len > 6 && ", "83": "        (endsWith(s, len, \"????\") ||", "105": "    if (len > 4 &&", "86": "    ", "87": "    if (len > 5 && ", "88": "        (endsWith(s, len, \"???\") ||", "104": "    "}, "id": 3020345, "filename": "RussianLightStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 144, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/bg", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020352/", "md5hash": "7e7712afd33dd8a58c422c604d58870b", "lines": {"40": "  public int stem(final char s[], int len) {", "41": "    if (len < 4) // do not stem", "42": "      return len;", "43": "    ", "44": "    if (len > 5 && endsWith(s, len, \"???\"))", "45": "      return len - 3;", "49": "    ", "50": "    if (len > 3) {", "51": "      if (endsWith(s, len, \"?\"))", "52": "        len--;", "53": "      if (endsWith(s, len, \"?\") ||", "54": "          endsWith(s, len, \"?\") ||", "61": "    // (it is fixed here as well)", "62": "    if (len > 4 && endsWith(s, len, \"??\")) {", "63": "      s[len - 2] = '?'; // replace with ?"}, "id": 3020352, "filename": "BulgarianStemmer.java"}, {"repo": "git://github.com/apache/lucene-solr.git", "language": "Java", "linescount": 820, "location": "/modules/analysis/common/src/java/org/apache/lucene/analysis/el", "name": "lucene-solr", "url": "https://searchcode.com/codesearch/view/3020375/", "md5hash": "4a598c3957b143dedf39c68ab42a4136", "lines": {"64": "      len = rule21(s, len);", "35": "  public int stem(char s[], int len) {", "36": "    if (len < 4) // too short", "37": "      return len;", "70": "    if (len > 9 && (endsWith(s, len, \"??????????\")", "71": "        || endsWith(s, len, \"??????????\")))", "73": "    ", "74": "    if (len > 8 && (endsWith(s, len, \"?????????\")", "75": "        || endsWith(s, len, \"?????????\")))", "77": "    ", "78": "    if (len > 8 && endsWith(s, len, \"?????????\"))", "79": "      return len - 3;", "63": "    if (len == origLen)", "62": "    // \"long list\"", "69": "  private int rule0(char s[], int len) {"}, "id": 3020375, "filename": "GreekStemmer.java"}, {"repo": "https://code.google.com/p/sshtunnel/", "language": "Java", "linescount": 149, "location": "/src/com/trilead/ssh2/crypto", "name": "sshtunnel", "url": "https://searchcode.com/codesearch/view/3037628/", "md5hash": "08005a8f6e1f404778cf1d93516559ca", "lines": {"33": "", "34": "\t\tif ((len < 0) || len > available())", "35": "\t\t\tthrow new IOException(\"Illegal len in DER object (\" + len + \")\");", "113": "\t\tif ((len < 0) || len > available())", "71": "", "72": "\t\tif ((len < 0) || len > available())", "73": "\t\t\tthrow new IOException(\"Illegal len in DER object (\" + len + \")\");", "114": "\t\t\tthrow new IOException(\"Illegal len in DER object (\" + len + \")\");", "112": "", "49": "\tprivate byte[] readBytes(int len) throws IOException {", "50": "\t\tif (len > count)", "51": "\t\t\tthrow new IOException(\"DER byte array: out of data\");", "84": "", "85": "\t\tif ((len & 0x80) == 0)", "86": "\t\t\treturn len;"}, "id": 3037628, "filename": "SimpleDERReader.java"}, {"repo": "http://mobicents.googlecode.com/svn/trunk/", "language": "Java", "linescount": 240, "location": "/tools/eclipse-plugins/sip-phone-plugin/src/net/java/sip/communicator/impl/media/transform", "name": "mobicents", "url": "https://searchcode.com/codesearch/view/75486/", "md5hash": "1dd9126dec0bc37a6199a279e3097d9d", "lines": {"192": "        if (outBuff.length < len)", "193": "        {", "162": "        int startOffset = this.offset + off;", "163": "        if (off < 0 || len <= 0 ", "164": "            || startOffset + len > this.buffer.length)", "176": "    /**", "177": "     * Read a byte region from specified offset with specified length in given buffer", "178": "     *", "187": "            || startOffset + len > this.buffer.length)", "153": "    /**", "185": "        int startOffset = this.offset + off;", "154": "     * Read a byte region from specified offset with specified length", "155": "     *", "186": "        if (off < 0 || len <= 0 ", "191": ""}, "id": 75486, "filename": "RawPacket.java"}, {"repo": "https://code.google.com/p/connectbot/", "language": "Java", "linescount": 1389, "location": "/src/com/trilead/ssh2", "name": "connectbot", "url": "https://searchcode.com/codesearch/view/191308/", "md5hash": "33e43fe8b37f6a56e0d1828a5fbbbc83", "lines": {"1301": "\t * be split into multiple writes.", "1270": "\t\t\tif ((readLen < 0) || (readLen > len))", "1231": "", "1232": "\t\tif ((len > 32768) || (len <= 0))", "1233": "\t\t\tthrow new IllegalArgumentException(\"invalid len argument\");", "1299": "\t/**", "244": "", "1269": "", "246": "\t\t\tthrow new IOException(\"Illegal sftp packet len: \" + len);", "1271": "\t\t\t\tthrow new IOException(\"The server sent an invalid length field.\");", "1300": "\t * Write bytes to a file. If <code>len</code> &gt; 32768, then the write operation will", "218": "\t\t\t\tthrow new IOException(\"Unexpected end of sftp stream.\");", "219": "\t\t\tif ((count == 0) || (count > len))", "220": "\t\t\t\tthrow new IOException(\"Underlying stream implementation is bogus!\");", "245": "\t\tif ((len > maxlen) || (len <= 0))"}, "id": 191308, "filename": "SFTPv3Client.java"}, {"repo": "https://code.google.com/p/connectbot/", "language": "Java", "linescount": 1757, "location": "/src/com/trilead/ssh2/channel", "name": "connectbot", "url": "https://searchcode.com/codesearch/view/191351/", "md5hash": "ab30adf9eb1d41cf08cc3fd11417b2ff", "lines": {"910": "\t\t\t\tthrow new IOException(\"Remote sent too much data, does not fit into window.\");", "893": "\t\tif (len != (msglen - 13))", "909": "\t\t\tif (c.localWindow < len)", "908": "", "877": "\t{", "878": "\t\tif (msglen <= 13)", "879": "\t\t\tthrow new IOException(\"SSH_MSG_CHANNEL_EXTENDED_DATA message has wrong size (\" + msglen + \")\");", "894": "\t\t\tthrow new IOException(\"SSH_MSG_CHANNEL_EXTENDED_DATA message has wrong len (calculated \" + (msglen - 13)", "408": "", "409": "\t\t\t\tif (estimatedMaxDataLen <= 0)", "410": "\t\t\t\t{", "892": "", "413": "", "414": "\t\t\t\tif (thislen > estimatedMaxDataLen)", "415": "\t\t\t\t\tthislen = estimatedMaxDataLen;"}, "id": 191351, "filename": "ChannelManager.java"}, {"repo": "https://code.google.com/p/connectbot/", "language": "Java", "linescount": 178, "location": "/src/com/trilead/ssh2/packets", "name": "connectbot", "url": "https://searchcode.com/codesearch/view/191383/", "md5hash": "2bf4c3cbb010dc8d33fa87bf20b7e277", "lines": {"34": "", "35": "\t\tif ((pos < 0) || (pos > arr.length))", "36": "\t\t\tthrow new IllegalArgumentException(\"Illegal offset.\");", "76": "\t\t\tthrow new IOException(\"Packet too short.\");", "74": "\t{", "75": "\t\tif ((pos + len) > max)", "44": "", "45": "\t\tif ((pos < 0) || (pos > arr.length))", "46": "\t\t\tthrow new IllegalArgumentException(\"Illegal offset.\");", "47": "", "48": "\t\tif ((max < 0) || (max > arr.length))", "49": "\t\t\tthrow new IllegalArgumentException(\"Illegal length.\");", "61": "\t{", "62": "\t\tif ((pos + len) > max)", "63": "\t\t\tthrow new IOException(\"Packet too short.\");"}, "id": 191383, "filename": "TypesReader.java"}, {"repo": "http://gdata-java-client.googlecode.com/svn/trunk/", "language": "Java", "linescount": 2956, "location": "/java/src/com/google/gdata/util/common/base", "name": "gdata-java-client", "url": "https://searchcode.com/codesearch/view/229394/", "md5hash": "a9524ba13db643092e0d3d458b5ec8a3", "lines": {"2242": "        sw.write(entry.getKey() + keyValueDelim + values[i]);", "171": "  @Deprecated public static String join(Object[] tokens, String delimiter) {", "2244": "          sw.write(entryDelim);", "2243": "        if (i < values.length - 1) {", "172": "    if (tokens == null || tokens.length == 0) return \"\";", "2090": "   * @param is input stream", "2091": "   * @param maxLength max number of bytes to read from \"is\". If this is -1, we", "2092": "   *          read everything.", "173": "    StringBuilder result = new StringBuilder();", "241": "      // a small optimization", "242": "      if (lines[i].length() <= width) {", "243": "        formatStr.append(lines[i]);", "2201": "   *", "2202": "   * @return null if s is zero length.  otherwise, returns s.", "2203": "   */"}, "id": 229394, "filename": "StringUtil.java"}, {"repo": "git://github.com/apache/thrift.git", "language": "Java", "linescount": 128, "location": "/lib/java/src/org/apache/thrift/protocol", "name": "thrift", "url": "https://searchcode.com/codesearch/view/266432/", "md5hash": "c4c1ccfd4e18b923051c59a588945090", "lines": {"65": "    }", "66": "    else if (len == 2) {", "67": "      dst[dstOff+1] =", "121": "        dst[dstOff+2] = (byte)", "119": "         (DECODE_TABLE[src[srcOff+2] & 0x0FF] >> 2));", "15": " * KIND, either express or implied. See the License for the", "16": " * specific language governing permissions and limitations", "17": " * under the License.", "115": "       (DECODE_TABLE[src[srcOff+1] & 0x0FF] >> 4));", "116": "    if (len > 2) {", "117": "      dst[dstOff+1] = (byte)", "55": "    dst[dstOff] = (byte)ENCODE_TABLE.charAt((src[srcOff] >> 2) & 0x3F);", "56": "    if (len == 3) {", "57": "      dst[dstOff + 1] =", "120": "      if (len > 3) {"}, "id": 266432, "filename": "TBase64Utils.java"}, {"repo": "git://github.com/apache/thrift.git", "language": "Java", "linescount": 128, "location": "/lib/javame/src/org/apache/thrift/protocol", "name": "thrift", "url": "https://searchcode.com/codesearch/view/266562/", "md5hash": "c4c1ccfd4e18b923051c59a588945090", "lines": {"65": "    }", "66": "    else if (len == 2) {", "67": "      dst[dstOff+1] =", "121": "        dst[dstOff+2] = (byte)", "119": "         (DECODE_TABLE[src[srcOff+2] & 0x0FF] >> 2));", "15": " * KIND, either express or implied. See the License for the", "16": " * specific language governing permissions and limitations", "17": " * under the License.", "115": "       (DECODE_TABLE[src[srcOff+1] & 0x0FF] >> 4));", "116": "    if (len > 2) {", "117": "      dst[dstOff+1] = (byte)", "55": "    dst[dstOff] = (byte)ENCODE_TABLE.charAt((src[srcOff] >> 2) & 0x3F);", "56": "    if (len == 3) {", "57": "      dst[dstOff + 1] =", "120": "      if (len > 3) {"}, "id": 266562, "filename": "TBase64Utils.java"}, {"repo": "http://xbird.googlecode.com/svn/trunk/", "language": "Java", "linescount": 279, "location": "/xbird-open/main/src/java/xbird/util/compress", "name": "xbird", "url": "https://searchcode.com/codesearch/view/270802/", "md5hash": "f9b9efda1e85d85bb57d847438fa6e20", "lines": {"160": "                int ref = outPos - ((ctrl & 0x1f) << 8) - 1;", "97": "                    }", "98": "                    if(len < 7) {", "99": "                        out[outPos++] = (byte) ((off >> 8) + (len << 5));", "162": "                    len += in[inPos++] & 255;", "161": "                if(len == 7) {", "194": "                    len += in[inPos++] & 255;", "193": "                if(len == 7) {", "75": "        while(true) {", "76": "            if(inPos < inLen - 4) {", "77": "                hval = next(hval, in, inPos);", "112": "                }", "113": "            } else if(inPos == inLen) {", "114": "                break;", "192": "                int ref = outPos - ((ctrl & 0x1f) << 8) - 1;"}, "id": 270802, "filename": "LZFCodec.java"}, {"repo": "http://xbird.googlecode.com/svn/trunk/", "language": "Java", "linescount": 116, "location": "/xbird-open/main/src/java/xbird/util/compress", "name": "xbird", "url": "https://searchcode.com/codesearch/view/270807/", "md5hash": "9d6eeb6f9b9ca342370b76683eb6adb2", "lines": {"67": "        final byte[] buffer = _buffer;", "68": "        if(buffer != null && _pos < buffer.length) {", "69": "            return;", "73": "        assert (len <= LZFOutputStream.DEFAULT_BUF_SIZE) : len;", "74": "        if(len < 0) { // not compressed", "75": "            len = -len;", "44": "", "45": "    public LZFInputStream(InputStream in, int buflen) throws IOException {", "46": "        this(in, buflen, false);", "15": " * See the License for the specific language governing permissions and", "16": " * limitations under the License.", "14": " * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.", "59": "        final byte[] buf = _buffer;", "60": "        if(_pos >= buf.length) {", "61": "            return -1;"}, "id": 270807, "filename": "LZFInputStream.java"}, {"repo": "http://xbird.googlecode.com/svn/trunk/", "language": "Java", "linescount": 421, "location": "/xbird-open/main/src/java/xbird/util/io", "name": "xbird", "url": "https://searchcode.com/codesearch/view/270908/", "md5hash": "b7ddc2385e3c9c0d8d7562f817a2853a", "lines": {"326": "        final int len = in.readInt();", "327": "        if(len == -1) {", "328": "            return null;", "137": "                if(total == len) {", "138": "                    return total;", "396": "        final int len = in.readInt();", "397": "        if(len == -1) {", "337": "        final int len = readInt(in);", "136": "                total += got;", "338": "        if(len == -1) {", "339": "            return null;", "398": "            return null;", "409": "        final int len = readInt(in);", "410": "        if(len == -1) {", "411": "            return null;"}, "id": 270908, "filename": "IOUtils.java"}, {"repo": "http://mycila.googlecode.com/svn/", "language": "Java", "linescount": 3453, "location": "/mycila-math/trunk/math/src/main/java/com/mycila/math/number/jdk7", "name": "mycila", "url": "https://searchcode.com/codesearch/view/280662/", "md5hash": "42611b4a8c6eac05cc840fdb231f0121", "lines": {"291": "", "292": "        if (this.mag.length == 0) {", "293": "            this.signum = 0;", "324": "        if (val.length() == 0)", "236": "    private BigInteger(int[] val) {", "237": "        if (val.length == 0)", "270": "", "271": "        if (this.mag.length == 0) {", "272": "            this.signum = 0;", "323": "            throw new NumberFormatException(\"Radix out of pandigitalRange\");", "238": "            throw new NumberFormatException(\"Zero length BigInteger\");", "217": "    public BigInteger(byte[] val) {", "218": "        if (val.length == 0)", "219": "            throw new NumberFormatException(\"Zero length BigInteger\");", "325": "            throw new NumberFormatException(\"Zero length BigInteger\");"}, "id": 280662, "filename": "BigInteger.java"}, {"repo": "http://mycila.googlecode.com/svn/", "language": "Java", "linescount": 1454, "location": "/mycila-math/trunk/math/src/main/java/com/mycila/math/number/jdk7", "name": "mycila", "url": "https://searchcode.com/codesearch/view/280664/", "md5hash": "78c13ded25f8b5522012b2fbd0c31f09", "lines": {"130": "        assert (intLen <= 2) : \"this MutableBigInteger exceeds the range of long\";", "131": "        if (intLen == 0)", "132": "            return 0;", "197": "        if (len <= 0)", "198": "            return blen <= 0 ? 0 : -1;", "168": "        int blen = b.intLen;", "169": "        if (intLen < blen)", "170": "            return -1;", "171": "        if (intLen > blen)", "140": "    BigInteger toBigInteger(int sign) {", "141": "        if (intLen == 0 || sign == 0)", "142": "            return BigInteger.ZERO;", "172": "            return 1;", "196": "        int len = intLen;", "119": "    private int[] getMagnitudeArray() {", "120": "        if (offset > 0 || value.length != intLen)", "121": "            return Arrays.copyOfRange(value, offset, offset + intLen);"}, "id": 280664, "filename": "MutableBigInteger.java"}, {"repo": "http://mycila.googlecode.com/svn/", "language": "Java", "linescount": 3655, "location": "/mycila-math/trunk/todo/java", "name": "mycila", "url": "https://searchcode.com/codesearch/view/280904/", "md5hash": "f0ddc68a0350ea271e56bd01d03612e9", "lines": {"336": "        if (val.length() == 0)", "229": "    public BigInteger(byte[] val) {", "230": "        if (val.length == 0)", "231": "            throw new NumberFormatException(\"Zero length BigInteger\");", "337": "            throw new NumberFormatException(\"Zero length BigInteger\");", "303": "", "304": "        if (this.mag.length==0) {", "305": "            this.signum = 0;", "335": "            throw new NumberFormatException(\"Radix out of range\");", "248": "    private BigInteger(int[] val) {", "249": "        if (val.length == 0)", "250": "            throw new NumberFormatException(\"Zero length BigInteger\");", "283": "        if (this.mag.length==0) {", "284": "            this.signum = 0;", "282": ""}, "id": 280904, "filename": "BigInteger.java"}, {"repo": "http://mycila.googlecode.com/svn/", "language": "Java", "linescount": 3175, "location": "/mycila-math/trunk/todo/java/jdk7", "name": "mycila", "url": "https://searchcode.com/codesearch/view/280965/", "md5hash": "14098123901ad3e5fd33905247517134", "lines": {"295": "        if (val.length() == 0)", "294": "            throw new NumberFormatException(\"Radix out of range\");", "262": "", "241": "", "264": "            this.signum = 0;", "263": "        if (this.mag.length==0) {", "207": "    private BigInteger(int[] val) {", "208": "        if (val.length == 0)", "209": "            throw new NumberFormatException(\"Zero length BigInteger\");", "242": "        if (this.mag.length==0) {", "243": "            this.signum = 0;", "188": "    public BigInteger(byte[] val) {", "189": "        if (val.length == 0)", "190": "            throw new NumberFormatException(\"Zero length BigInteger\");", "296": "            throw new NumberFormatException(\"Zero length BigInteger\");"}, "id": 280965, "filename": "BigInteger.java"}, {"repo": "http://mycila.googlecode.com/svn/", "language": "Java", "linescount": 1478, "location": "/mycila-math/trunk/todo/java/jdk7", "name": "mycila", "url": "https://searchcode.com/codesearch/view/280969/", "md5hash": "8d120c14ff2c307731b31ccd646378e8", "lines": {"161": "    BigDecimal toBigDecimal(int sign, int scale) {", "130": "    private int[] getMagnitudeArray() {", "131": "        if (offset > 0 || value.length != intLen)", "132": "            return Arrays.copyOfRange(value, offset, offset + intLen);", "162": "        if (intLen == 0 || sign == 0)", "168": "        // make a BigInteger object for the resultant BigDecimal object.", "169": "        if (len > 2 || (d < 0 && len == 2))", "170": "            return new BigDecimal(new BigInteger(mag, sign), INFLATED, scale, 0);", "141": "        assert (intLen <= 2) : \"this MutableBigInteger exceeds the range of long\";", "142": "        if (intLen == 0)", "143": "            return 0;", "163": "            return BigDecimal.valueOf(0, scale);", "151": "    BigInteger toBigInteger(int sign) {", "152": "        if (intLen == 0 || sign == 0)", "153": "            return BigInteger.ZERO;"}, "id": 280969, "filename": "MutableBigInteger.java"}, {"repo": "http://mycila.googlecode.com/svn/", "language": "Java", "linescount": 506, "location": "/mycila-math/trunk/todo/java/ecm", "name": "mycila", "url": "https://searchcode.com/codesearch/view/281006/", "md5hash": "99ee45d878d500a7346afe824ab6276e", "lines": {"64": "          factorial = BigInt1;", "66": "          for (i=2; i*i<=len; i++) {", "67": "            if (len/i*i==len) {return -8;}", "68": "          }", "83": "            charValue == 'L' || charValue == 'l') {", "48": "          len = stackValues[stackIndex].bitLength()-1;", "49": "          if (len > 16) {return -3;}", "50": "          len = stackValues[stackIndex].intValue();", "51": "          if (len < 0 || len > 5984) {return -3;}", "52": "          factorial = BigInt1;", "85": "            return -6;", "84": "          if (leftNumberFlag || exprIndex == exprLength-1) {", "60": "          len = stackValues[stackIndex].bitLength()-1;", "61": "          if (len > 16) {return -3;}", "62": "          len = stackValues[stackIndex].intValue();", "63": "          if (len < 0 || len > 46049) {return -3;}"}, "id": 281006, "filename": "expression.java"}, {"repo": "http://xruby.googlecode.com/svn/trunk/", "language": "Java", "linescount": 784, "location": "/src/com/xruby/runtime/builtin", "name": "xruby", "url": "https://searchcode.com/codesearch/view/345702/", "md5hash": "95657955e32b588fa97741d271217aa1", "lines": {"96": "            throw new RubyException(RubyRuntime.ArgumentErrorClass, \"malformed UTF-8 character (expected \" + n + \" bytes, given \" + lenp + \"bytes)\");", "164": "", "165": "            if (p > format.length()) {", "166": "                len = 1;", "232": "                case 'q':", "233": "                    if (str.length() < Long.SIZE / Byte.SIZE) {", "234": "                        ary.add(RubyConstant.QNIL);", "149": "            char t;", "150": "            if (p >= format.length())", "151": "                t = 0;", "185": "                case 'a':", "186": "                    if (len > send - s) len = send - s;", "187": "                    ary.add(ObjectFactory.createString(str.substring(s, s + len)));", "94": "        }", "95": "        if (n > lenp) {"}, "id": 345702, "filename": "ArrayPacker.java"}, {"repo": "http://gwt-rpc-plus.googlecode.com/svn/trunk/", "language": "Java", "linescount": 93, "location": "/gwt-rpc-plus/server/com/dotspots/rpcplus/jsonrpc/thrift", "name": "gwt-rpc-plus", "url": "https://searchcode.com/codesearch/view/363924/", "md5hash": "52ee2192695fc376188e91f388b98759", "lines": {"1": "package com.dotspots.rpcplus.jsonrpc.thrift;", "2": "", "86": "\t\t\tdst[dstOff + 1] = (byte) (((DECODE_TABLE[src[srcOff + 1] & 0x0FF] << 4) & 0xF0) | (DECODE_TABLE[src[srcOff + 2] & 0x0FF] >> 2));", "41": "\t\tdst[dstOff] = (byte) ENCODE_TABLE.charAt((src[srcOff] >> 2) & 0x3F);", "42": "\t\tif (len == 3) {", "43": "\t\t\tdst[dstOff + 1] = (byte) ENCODE_TABLE.charAt(((src[srcOff] << 4) + (src[srcOff + 1] >> 4)) & 0x3F);", "45": "\t\t\tdst[dstOff + 3] = (byte) ENCODE_TABLE.charAt(src[srcOff + 2] & 0x3F);", "46": "\t\t} else if (len == 2) {", "47": "\t\t\tdst[dstOff + 1] = (byte) ENCODE_TABLE.charAt(((src[srcOff] << 4) + (src[srcOff + 1] >> 4)) & 0x3F);", "88": "\t\t\t\tdst[dstOff + 2] = (byte) (((DECODE_TABLE[src[srcOff + 2] & 0x0FF] << 6) & 0xC0) | DECODE_TABLE[src[srcOff + 3] & 0x0FF]);", "84": "\t\tdst[dstOff] = (byte) ((DECODE_TABLE[src[srcOff] & 0x0FF] << 2) | (DECODE_TABLE[src[srcOff + 1] & 0x0FF] >> 4));", "85": "\t\tif (len > 2) {", "22": "\t/**", "23": "\t * Encode len bytes of data in src at offset srcOff, storing the result into", "24": "\t * dst at offset dstOff. len must be 1, 2, or 3. dst must have at least", "87": "\t\t\tif (len > 3) {"}, "id": 363924, "filename": "TBase64Utils.java"}, {"repo": "http://nutz.googlecode.com/svn/trunk/", "language": "Java", "linescount": 773, "location": "/src/org/nutz/repo/org/objectweb/asm", "name": "nutz", "url": "https://searchcode.com/codesearch/view/393249/", "md5hash": "16560ca0cf0bb41d25d1d7a2d13e6cd2", "lines": {"736": "        if (sort == OBJECT || sort == ARRAY) {", "737": "            if (len != t.len) {", "738": "                return false;", "6": " * Redistribution and use in source and binary forms, with or without", "7": " * modification, are permitted provided that the following conditions", "8": " * are met:", "15": " *    contributors may be used to endorse or promote products derived from", "16": " *    this software without specific prior written permission.", "17": " *", "402": "                if (buf[off + len] == 'L') {", "403": "                    ++len;", "401": "                }", "26": " * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)", "27": " * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF", "28": " * THE POSSIBILITY OF SUCH DAMAGE."}, "id": 393249, "filename": "Type.java"}, {"repo": "http://nutz.googlecode.com/svn/trunk/", "language": "Java", "linescount": 728, "location": "/src/org/nutz/lang", "name": "nutz", "url": "https://searchcode.com/codesearch/view/393430/", "md5hash": "d4dfb3a61973f81d282b7f05d467a206", "lines": {"66": "        int len = s.length();", "67": "        if (len == 0)", "68": "            return \"\";", "655": "                    i++;", "541": "            return null;", "656": "                    if (i >= len)", "657": "                        return sb.toString();", "87": "        int len = s.length();", "88": "        if (len == 0)", "89": "            return \"\";", "187": "        int length = cs.length();", "188": "        if (length == 0)", "189": "            return cs.toString();", "542": "        if (str.length() > 1)", "543": "            return str.subSequence(1, str.length()).toString();"}, "id": 393430, "filename": "Strings.java"}, {"repo": "http://nutz.googlecode.com/svn/trunk/", "language": "Java", "linescount": 2056, "location": "/src/org/nutz/lang", "name": "nutz", "url": "https://searchcode.com/codesearch/view/393437/", "md5hash": "718b65270b3bec4d538ce83dbb793cc1", "lines": {"230": "                int len = Array.getLength(a1);", "231": "                if (len != Array.getLength(a2))", "232": "                    return false;", "584": "        if (sb.length() > 0)", "583": "            sb.append(String.format(ptn, obj)).append(c);", "302": "            while (true) {", "303": "                if ((len = reader.read(data)) == -1)", "304": "                    break;", "529": "        try {", "530": "            if (null == eles || eles.length == 0) {", "531": "                T[] arr = (T[]) Array.newInstance(e.getClass(), 1);", "500": "        try {", "501": "            if (null == eles || eles.length == 0) {", "502": "                T[] arr = (T[]) Array.newInstance(e.getClass(), 1);", "585": "            sb.deleteCharAt(sb.length() - 1);"}, "id": 393437, "filename": "Lang.java"}, {"repo": "http://mozart.googlecode.com/svn/trunk/", "language": "Java", "linescount": 1291, "location": "/src/ru/adv/mozart/servlet", "name": "mozart", "url": "https://searchcode.com/codesearch/view/419513/", "md5hash": "1a50f905910e275af3ef303e9b5d14a0", "lines": {"449": "", "450": "        if (fileLength == 0)", "451": "            return null;", "391": "        String contentType = mimeTypeResolver.getMimeType(resourceInfo.path);", "392": "        if ( !StringUtils.hasLength(contentType) && resourceInfo.file!=null ) {", "393": "        \tcontentType = mimeTypeResolver.getMimeType( resourceInfo.file.getName() );", "1002": "                    break;", "300": "            long contentLength = resourceInfo.length;", "301": "            if ( contentLength >= 0 ) {", "302": "                if (isDebug()) {", "1000": "                len = istream.read(buffer);", "1001": "                if (len == -1)", "509": "                        (rangeDefinition.substring(0, dashPos));", "510": "                    if (dashPos < rangeDefinition.length() - 1)", "511": "                        currentRange.end = Long.parseLong"}, "id": 419513, "filename": "StaticResourceHandler.java"}, {"repo": "http://mozart.googlecode.com/svn/trunk/", "language": "Java", "linescount": 538, "location": "/src/ru/adv/util", "name": "mozart", "url": "https://searchcode.com/codesearch/view/420291/", "md5hash": "4a7e4aaf243b1c02c2b0a606bb94fad9", "lines": {"144": "\t\t\t_hash = 0;", "134": "\tpublic synchronized void setLength(int newLength) {", "135": "\t\tif (newLength < 0) {", "136": "\t\t\tthrow new ArrayIndexOutOfBoundsException(newLength);", "138": "", "139": "\t\tif (newLength > _value.length) {", "140": "\t\t\texpandCapacity(newLength);", "142": "", "111": "\t\tif (minimumCapacity > _value.length) {", "112": "\t\t\texpandCapacity(minimumCapacity);", "145": "\t\t}", "146": "\t\tif (_count < newLength) {", "147": "\t\t\tfor (; _count < newLength; _count++) {", "110": "\tpublic synchronized void ensureCapacity(int minimumCapacity) {", "143": "\t\tif (_count != newLength) {"}, "id": 420291, "filename": "ByteBuffer.java"}, {"repo": "https://code.google.com/p/jbrowser/", "language": "Java", "linescount": 2050, "location": "/src/main/java/net/sourceforge/iharder", "name": "jbrowser", "url": "https://searchcode.com/codesearch/view/476351/", "md5hash": "8763a80267a36b7887b74e8f728c63f7", "lines": {"768": "     * @since 1.4", "816": "     * @since 2.0", "870": "     * @throws NullPointerException if source array is null", "871": "     * @throws IllegalArgumentException if source array, offset, or length are invalid", "872": "     * @since 2.3.1", "814": "     * @throws NullPointerException if source array is null", "815": "     * @throws IllegalArgumentException if source array, offset, or length are invalid", "464": "     * anywhere along their length by specifying ", "465": "     * <var>srcOffset</var> and <var>destOffset</var>.", "883": "", "884": "        if( len < 0 ){", "885": "            throw new IllegalArgumentException( \"Cannot have length offset: \" + len );", "463": "     * The source and destination arrays can be manipulated", "766": "     * @throws NullPointerException if source array is null", "767": "     * @throws IllegalArgumentException if source array, offset, or length are invalid"}, "id": 476351, "filename": "Base64.java"}, {"repo": "https://code.google.com/p/jbrowser/", "language": "Java", "linescount": 1416, "location": "/src/main/java/ru/atomation/utils/sevenzip/compression/lzma", "name": "jbrowser", "url": "https://searchcode.com/codesearch/view/476390/", "md5hash": "7e6ebae775a5f0208e90fd6eb3de67df", "lines": {"576": "\t\t\tif (repLens[i] > repLens[repMaxIndex])", "577": "\t\t\t\trepMaxIndex = i;", "196": "\t\t{", "197": "\t\t\tif (symbol < Base.kNumLowLenSymbols)", "198": "\t\t\t{", "566": "\t\t}", "205": "\t\t\t\trangeEncoder.Encode(_choice, 0, 1);", "206": "\t\t\t\tif (symbol < Base.kNumMidLenSymbols)", "207": "\t\t\t\t{", "436": "\t\t\tlenRes = _matchDistances[_numDistancePairs - 2];", "437": "\t\t\tif (lenRes == _numFastBytes)", "438": "\t\t\t\tlenRes += _matchFinder.GetMatchLen((int)lenRes - 1, _matchDistances[_numDistancePairs - 1],", "567": "\t\tif (numAvailableBytes > Base.kMatchMaxLen)", "568": "\t\t\tnumAvailableBytes = Base.kMatchMaxLen;", "575": "\t\t\trepLens[i] = _matchFinder.GetMatchLen(0 - 1, reps[i], Base.kMatchMaxLen);"}, "id": 476390, "filename": "Encoder.java"}, {"repo": "git://github.com/grails/grails-core.git", "language": "Java", "linescount": 1929, "location": "/grails-web/src/main/groovy/org/codehaus/groovy/grails/web/util", "name": "grails-core", "url": "https://searchcode.com/codesearch/view/565623/", "md5hash": "6931016bc092d14010514114cf7937b3", "lines": {"801": "    protected static final void arrayCopy(char[] src, int srcPos, char[] dest, int destPos, int length) {", "802": "        if (length == 1) {", "803": "            dest[destPos]=src[srcPos];", "624": "            reset();", "625": "            if (buf.length > 0) {", "626": "                addChunk(new CharBufferChunk(-1, buf, 0, buf.length));", "563": "            reset();", "564": "            if (str.length() > 0) {", "565": "                addChunk(new StringChunk(str, 0, str.length()));", "153": " * <p>", "536": "        char[] buf = readAsCharArray();", "537": "        if (buf.length > 0) {", "154": " * If the buffer is in \"connectTo\" mode, any String or char[] that's length is", "155": " * over writeDirectlyToConnectedMinSize gets written directly to the target. The", "538": "            return StringCharArrayAccessor.createString(buf);"}, "id": 565623, "filename": "StreamCharBuffer.java"}, {"repo": "git://github.com/grails/grails-core.git", "language": "Java", "linescount": 429, "location": "/grails-web/src/main/groovy/org/codehaus/groovy/grails/web/util", "name": "grails-core", "url": "https://searchcode.com/codesearch/view/565634/", "md5hash": "a1d19a27d4545bef70c27031f40d28e8", "lines": {"384": "", "385": "            if (len == 0) {", "322": "", "323": "            if ((off < 0) || (off > b.length) || (len < 0) ||", "132": "                char[] ch = charbuffer.array();", "133": "                if (len != ch.length) {", "134": "                    ch = ArrayUtils.subarray(ch, 0, len);", "327": "", "328": "            if (len == 0) {", "329": "                return;", "386": "                return 0;", "324": "                    ((off + len) > b.length) || ((off + len) < 0)) {", "379": "", "380": "            if ((off < 0) || (off > b.length) || (len < 0) ||", "381": "                    ((off + len) > b.length) || ((off + len) < 0)) {"}, "id": 565634, "filename": "StreamByteBuffer.java"}, {"repo": "http://jiql.googlecode.com/svn/trunk/", "language": "Java", "linescount": 978, "location": "/jiql/source/tools/util", "name": "jiql", "url": "https://searchcode.com/codesearch/view/781121/", "md5hash": "860d1a6f1a5df89b940bfdde23553c17", "lines": {"282": "\t        if (readLen == -1) {", "264": "\t\t{", "201": "        if (len > 0)", "202": "        {", "204": "        int rtry = 0;", "205": "\t\t//if (len > 1000000)System.gc();", "206": "\t\tfor(readCount = 0; readCount < len; )", "200": "\t\t{", "265": "\t    if (len > 0)", "283": "\t            rtry++;", "281": "\t\t\t\treadLen = din.read(rec,0,chunkSize);", "266": "\t    {", "219": "\t\t\t\tloc = 2;", "220": "            if (readLen == -1) {", "221": "                rtry++;"}, "id": 781121, "filename": "StreamUtil.java"}, {"repo": "http://androjena.googlecode.com/svn/trunk/", "language": "Java", "linescount": 639, "location": "/androjena.test/src/com/hp/hpl/jena/db/test", "name": "androjena", "url": "https://searchcode.com/codesearch/view/815176/", "md5hash": "809d405fa408637835bb24cf342e3846", "lines": {"64": "\t\tmodel = null;", "545": "\t\tStatement a2 = crAssertedStmt(\"s2\",\"p2\",\"s1\");", "546": "\t\tResource r1 = crReifiedStmt(\"r1\",a1);", "547": "\t\tResource r2 = crReifiedStmt(\"r2\",a2);", "548": "\t\t", "230": "\t\t\tlenMax = dbDriver.getLongObjectLengthMax();", "231": "\t\t\tif ( len == lenMax )", "232": "\t\t\t\treturn; // nothing to test", "12": " * ", "13": " * It adds/removes statements of different types and verifys", "14": " * that the correct statements exist at the correct times.", "542": "\t\tmodel = new ModelRDB(g);", "540": "\t\tGraphRDB g = new GraphRDB( conn, null, null, ", "541": "\t\t\t\tGraphRDB.OPTIMIZE_ALL_REIFICATIONS_AND_HIDE_NOTHING, false);", "62": "    protected void tearDown() throws java.lang.Exception {", "63": "\t\tif ( model != null ) model.close();"}, "id": 815176, "filename": "TestBasicOperations.java"}, {"repo": "https://bitbucket.org/spencerelliott/mercury/", "language": "Java", "linescount": 2066, "location": "/src/ca/spencerelliott/mercury", "name": "mercury", "url": "https://searchcode.com/codesearch/view/916548/", "md5hash": "9cd75d6e3933956d3c7305fadcf62167", "lines": {"896": "        if( len < 0 ){", "897": "            throw new IllegalArgumentException( \"Cannot have length offset: \" + len );", "827": "     * @throws IllegalArgumentException if source array, offset, or length are invalid", "476": "     * anywhere along their length by specifying ", "778": "     * @throws NullPointerException if source array is null", "779": "     * @throws IllegalArgumentException if source array, offset, or length are invalid", "780": "     * @since 1.4", "882": "     * @throws NullPointerException if source array is null", "883": "     * @throws IllegalArgumentException if source array, offset, or length are invalid", "884": "     * @since 2.3.1", "826": "     * @throws NullPointerException if source array is null", "475": "     * The source and destination arrays can be manipulated", "828": "     * @since 2.0", "477": "     * <var>srcOffset</var> and <var>destOffset</var>.", "895": ""}, "id": 916548, "filename": "Base64.java"}, {"repo": "git://github.com/greedy/scala-llvm.git", "language": "Java", "linescount": 812, "location": "/src/actors/scala/actors/threadpool", "name": "scala-llvm", "url": "https://searchcode.com/codesearch/view/938469/", "md5hash": "57f099ae3c221699b6a562907bef44f3", "lines": {"683": "        if (a.length == 0) return \"[]\";", "617": "        int len = a1.length;", "682": "        if (a == null) return \"null\";", "619": "        for (int i = 0; i < len; i++) {", "684": "        StringBuffer buf = new StringBuffer();", "669": "        if (a == null) return \"null\";", "656": "        if (a == null) return \"null\";", "657": "        if (a.length == 0) return \"[]\";", "658": "        StringBuffer buf = new StringBuffer();", "695": "        if (a == null) return \"null\";", "696": "        if (a.length == 0) return \"[]\";", "697": "        StringBuffer buf = new StringBuffer();", "618": "        if (len != a2.length) return false;", "670": "        if (a.length == 0) return \"[]\";", "671": "        StringBuffer buf = new StringBuffer();"}, "id": 938469, "filename": "Arrays.java"}, {"repo": "http://creativecomputing.googlecode.com/svn/trunk/", "language": "Java", "linescount": 2036, "location": "/cc2.0/extern/org/apache/commons/compress/bzip2", "name": "creativecomputing", "url": "https://searchcode.com/codesearch/view/1115129/", "md5hash": "cf1bdee070a93d86d2f25f6f98224094", "lines": {"386": "", "387": "        if( m_runLength > 0 )", "388": "        {", "935": "            {", "936": "                if( length[ i ] == n )", "937": "                {", "426": "                m_runLength++;", "427": "                if( m_runLength > 254 )", "428": "                {", "1721": "            {", "343": "                len[ i - 1 ] = (char)j;", "344": "                if( j > maxLen )", "345": "                {", "1722": "                if( len[ t ][ i ] > maxLen )", "1723": "                {"}, "id": 1115129, "filename": "CBZip2OutputStream.java"}, {"repo": "http://creativecomputing.googlecode.com/svn/trunk/", "language": "Java", "linescount": 2848, "location": "/cc2.0/extern/org/apache/commons/lang3/text", "name": "creativecomputing", "url": "https://searchcode.com/codesearch/view/1115185/", "md5hash": "b166ed5be277a2c748977ebcffdb70d2", "lines": {"2112": "            return \"\";", "2081": "    public String rightString(int length) {", "2082": "        if (length <= 0) {", "2083": "            return \"\";", "2084": "        } else if (length >= size) {", "2085": "            return new String(buffer, 0, size);", "2113": "        }", "2059": "    public String leftString(int length) {", "2060": "        if (length <= 0) {", "2061": "            return \"\";", "2098": "     * If the index is greater than the builder size, it is treated as the builder size.", "2099": "     * If the length is negative, the empty string is returned.", "2100": "     * If insufficient characters are available in the builder, as much as possible is returned.", "2114": "        if (size <= index + length) {", "2115": "            return new String(buffer, index, size - index);", "2110": "        }", "2111": "        if (length <= 0 || index >= size) {"}, "id": 1115185, "filename": "StrBuilder.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 1534, "location": "/plugins/Archive/tags/archive-0_3_3/com/aftexsw/util/bzip", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1366251/", "md5hash": "6b1f36daa453da44bfd22bb39ac79bb7", "lines": {"384": "\t\t\twriteRun();", "748": "\t\t\tfor (i = 0; i < alphaSize; i++) {", "202": "\t\t\t\tlen[i-1] = (char)j;", "203": "\t\t\t\tif (j > maxLen)", "204": "\t\t\t\t\ttooLong = true;", "749": "\t\t\t\tif (len[t][i] > maxLen)", "750": "\t\t\t\t\tmaxLen = len[t][i];", "497": "\t\t\tfor (i = 0; i < alphaSize; i++)", "498": "\t\t\t\tif (length[i] == n) {", "499": "\t\t\t\t\tcode[i] = vec;", "310": "\t\t\t\trunLength++;", "311": "\t\t\t\tif(runLength > 254) {", "312": "\t\t\t\t\twriteRun();", "382": "", "383": "\t\tif(runLength > 0)"}, "id": 1366251, "filename": "CBZip2OutputStream.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 177, "location": "/plugins/WhiteSpace/tags/whitespace_0_9_2/whitespace", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1397535/", "md5hash": "cbdb3af512b3f28f6a416a0d613521c2", "lines": {"96": "", "70": "            int len = (end - 1) - start;", "71": "            if (len == 0) { continue; }", "72": "", "44": "            int len = (end - 1) - start;", "45": "            if (len == 0) { continue; }", "46": "", "77": "", "51": "", "52": "            if (whiteSpaceInfo.hasTabs && whiteSpaceInfo.len > 0) {", "53": "                String textOut = MiscUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, 0);", "79": "                String textOut = MiscUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, tabSize);", "78": "            if (whiteSpaceInfo.hasSpaces && whiteSpaceInfo.len > 0) {", "94": "            int len = (end - 1) - start;", "95": "            if (len == 0) { continue; }"}, "id": 1397535, "filename": "DocumentUtilities.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 175, "location": "/plugins/WhiteSpace/tags/Whitespace-1.0.1/whitespace", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1397557/", "md5hash": "50fa0234b6f1df376bc87dd0765e662f", "lines": {"43": "            if (len == 0) { continue; }", "68": "            int len = (end - 1) - start;", "69": "            if (len == 0) { continue; }", "70": "", "76": "            if (whiteSpaceInfo.hasSpaces && whiteSpaceInfo.len > 0) {", "42": "            int len = (end - 1) - start;", "75": "", "44": "", "77": "                String textOut = StandardUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, tabSize);", "49": "", "50": "            if (whiteSpaceInfo.hasTabs && whiteSpaceInfo.len > 0) {", "51": "                String textOut = StandardUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, 0);", "92": "            int len = (end - 1) - start;", "93": "            if (len == 0) { continue; }", "94": ""}, "id": 1397557, "filename": "DocumentUtilities.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 178, "location": "/plugins/WhiteSpace/tags/whitespace_0_9_3/whitespace", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1397577/", "md5hash": "e2fb39279d95abb93709ea649030a419", "lines": {"96": "            if (len == 0) { continue; }", "97": "", "71": "            int len = (end - 1) - start;", "72": "            if (len == 0) { continue; }", "73": "", "46": "            if (len == 0) { continue; }", "45": "            int len = (end - 1) - start;", "78": "", "47": "", "80": "                String textOut = MiscUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, tabSize);", "52": "", "53": "            if (whiteSpaceInfo.hasTabs && whiteSpaceInfo.len > 0) {", "54": "                String textOut = MiscUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, 0);", "79": "            if (whiteSpaceInfo.hasSpaces && whiteSpaceInfo.len > 0) {", "95": "            int len = (end - 1) - start;"}, "id": 1397577, "filename": "DocumentUtilities.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 217, "location": "/plugins/WhiteSpace/tags/whitespace-0_9/whitespace", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1397620/", "md5hash": "b3e97d53db7dd858077d7c7eb4da62be", "lines": {"97": "", "98": "            if (whiteSpaceInfo.hasSpaces && whiteSpaceInfo.len > 0) {", "99": "                String textOut = MiscUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, tabSize);", "48": "            int len = (end - 1) - start;", "49": "            if (len == 0) { continue; }", "50": "", "85": "            int len = (end - 1) - start;", "86": "            if (len == 0) { continue; }", "87": "", "121": "            int len = (end - 1) - start;", "122": "            if (len == 0) { continue; }", "123": "", "60": "", "61": "            if (whiteSpaceInfo.hasTabs && whiteSpaceInfo.len > 0) {", "62": "                String textOut = MiscUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, 0);"}, "id": 1397620, "filename": "DocumentUtilities.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 217, "location": "/plugins/WhiteSpace/tags/whitespace-0_8/whitespace", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1397638/", "md5hash": "0b1983f4bfb6dde10f53783f2f597a52", "lines": {"97": "", "98": "            if (whiteSpaceInfo.hasSpaces && whiteSpaceInfo.len > 0) {", "99": "                String textOut = MiscUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, tabSize);", "48": "            int len = (end - 1) - start;", "49": "            if (len == 0) { continue; }", "50": "", "85": "            int len = (end - 1) - start;", "86": "            if (len == 0) { continue; }", "87": "", "121": "            int len = (end - 1) - start;", "122": "            if (len == 0) { continue; }", "123": "", "60": "", "61": "            if (whiteSpaceInfo.hasTabs && whiteSpaceInfo.len > 0) {", "62": "                String textOut = MiscUtilities.createWhiteSpace(whiteSpaceInfo.expandedLen, 0);"}, "id": 1397638, "filename": "DocumentUtilities.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 2022, "location": "/jEdit/tags/jedit-4-2-pre4/installer", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1402703/", "md5hash": "a6ae056b76b39de736a770479bb8c89b", "lines": {"1707": "            {", "329": "                len[ i - 1 ] = (char)j;", "330": "                if( j > maxLen )", "331": "                {", "1708": "                if( len[ t ][ i ] > maxLen )", "1709": "                {", "372": "", "373": "        if( m_runLength > 0 )", "374": "        {", "921": "            {", "922": "                if( length[ i ] == n )", "923": "                {", "412": "                m_runLength++;", "413": "                if( m_runLength > 254 )", "414": "                {"}, "id": 1402703, "filename": "CBZip2OutputStream.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 90, "location": "/jEdit/tags/jedit-4-2-pre4/org/gjt/sp/util", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1403314/", "md5hash": "3ac5bba63cf5ac608b2522c42af63d2d", "lines": {"51": "", "8": " * This program is free software; you can redistribute it and/or", "9": " * modify it under the terms of the GNU General Public License", "10": " * as published by the Free Software Foundation; either version 2", "44": "\t{", "45": "\t\tif(len >= array.length)", "46": "\t\t{", "47": "\t\t\tint[] arrayN = new int[len * 2];", "48": "\t\t\tSystem.arraycopy(array,0,arrayN,0,len);", "49": "\t\t\tarray = arrayN;", "18": " * You should have received a copy of the GNU General Public License", "19": " * along with this program; if not, write to the Free Software", "20": " * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.", "53": "\t} //}}}", "52": "\t\tarray[len++] = num;"}, "id": 1403314, "filename": "IntegerArray.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 78, "location": "/jEdit/tags/jedit-4-0-pre3/org/gjt/sp/util", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1403967/", "md5hash": "d34f24cf4dbd5251c1f0f2ff7f2a3c45", "lines": {"38": "\t{", "39": "\t\tif(len >= array.length)", "40": "\t\t{", "41": "\t\t\tint[] arrayN = new int[len * 2];", "10": " * as published by the Free Software Foundation; either version 2", "43": "\t\t\tarray = arrayN;", "45": "", "46": "\t\tarray[len++] = num;", "47": "\t} //}}}", "8": " * This program is free software; you can redistribute it and/or", "18": " * You should have received a copy of the GNU General Public License", "19": " * along with this program; if not, write to the Free Software", "20": " * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.", "9": " * modify it under the terms of the GNU General Public License", "42": "\t\t\tSystem.arraycopy(array,0,arrayN,0,len);"}, "id": 1403967, "filename": "IntegerArray.java"}, {"repo": "https://jedit.svn.sourceforge.net/svnroot/jedit", "language": "Java", "linescount": 84, "location": "/jEdit/tags/jedit-4-2-pre1/org/gjt/sp/util", "name": "jedit", "url": "https://searchcode.com/codesearch/view/1430091/", "md5hash": "4a39ba8f5067b01252858be258e9d1fa", "lines": {"38": "\t{", "39": "\t\tif(len >= array.length)", "40": "\t\t{", "41": "\t\t\tint[] arrayN = new int[len * 2];", "10": " * as published by the Free Software Foundation; either version 2", "43": "\t\t\tarray = arrayN;", "45": "", "46": "\t\tarray[len++] = num;", "47": "\t} //}}}", "8": " * This program is free software; you can redistribute it and/or", "18": " * You should have received a copy of the GNU General Public License", "19": " * along with this program; if not, write to the Free Software", "20": " * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.", "9": " * modify it under the terms of the GNU General Public License", "42": "\t\t\tSystem.arraycopy(array,0,arrayN,0,len);"}, "id": 1430091, "filename": "IntegerArray.java"}, {"repo": "http://loon-simple.googlecode.com/svn/trunk/", "language": "Java", "linescount": 304, "location": "/android/LGame-Android-0.2.94/LGame/com/badlogic/gdx/math", "name": "loon-simple", "url": "https://searchcode.com/codesearch/view/1549594/", "md5hash": "9c9b4a70679522364e6acd4ee6177b9a", "lines": {"64": "\t\treturn (float) Math.sqrt(x * x + y * y);", "144": "\t\t}", "66": "", "67": "\t/** Return the squared length of this vector. */", "68": "\tpublic float lengthSquared() {", "9": " * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\"", "10": " * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language", "139": "\tpublic Vector2 nor() {", "140": "\t\tfloat len = len();", "141": "\t\tif (len != 0) {", "142": "\t\t\tx /= len;", "143": "\t\t\ty /= len;", "11": " * governing permissions and limitations under the License.", "62": "", "63": "\tpublic float length() {"}, "id": 1549594, "filename": "Vector2.java"}, {"repo": "http://loon-simple.googlecode.com/svn/trunk/", "language": "Java", "linescount": 95, "location": "/j2se/LGame-j2se-0.2.6/org/loon/framework/game/simple/extend/db", "name": "loon-simple", "url": "https://searchcode.com/codesearch/view/1552469/", "md5hash": "19591e9c01f12b80297592e6355874b7", "lines": {"69": "\t\tint cells = (int) ((AccessData.PAGESIZE) / 4);", "70": "\t\tif (cells - len > 0) {", "71": "\t\t\treturn false;", "79": "\t\t\tfor (int i = 0; i < len; i++) {", "77": "\t\tint[] t = new int[len + 1];", "46": "\t\tlen = file.readInt();", "47": "\t\tif (len > 0) {", "48": "\t\t\tbranches = new int[len];", "18": " * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the", "19": " * License for the specific language governing permissions and limitations under", "20": " * the License.", "78": "\t\tif (len > 0) {", "57": "\t\tfile.writeInt(nextPage);", "58": "\t\tif (len > 0) {", "59": "\t\t\tfile.writeInt(len);"}, "id": 1552469, "filename": "AccessAssistant.java"}, {"repo": "http://loon-simple.googlecode.com/svn/trunk/", "language": "Java", "linescount": 95, "location": "/j2se/LGame-j2se-0.2.9/src/org/loon/framework/javase/game/extend/db", "name": "loon-simple", "url": "https://searchcode.com/codesearch/view/1552943/", "md5hash": "0edb0757d8527b4f80b36a31971cf934", "lines": {"69": "\t\tint cells = (int) ((AccessData.PAGESIZE) / 4);", "70": "\t\tif (cells - len > 0) {", "71": "\t\t\treturn false;", "79": "\t\t\tfor (int i = 0; i < len; i++) {", "77": "\t\tint[] t = new int[len + 1];", "46": "\t\tlen = file.readInt();", "47": "\t\tif (len > 0) {", "48": "\t\t\tbranches = new int[len];", "18": " * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the", "19": " * License for the specific language governing permissions and limitations under", "20": " * the License.", "78": "\t\tif (len > 0) {", "57": "\t\tfile.writeInt(nextPage);", "58": "\t\tif (len > 0) {", "59": "\t\t\tfile.writeInt(len);"}, "id": 1552943, "filename": "AccessAssistant.java"}, {"repo": "http://tungsten-replicator.googlecode.com/svn/trunk/", "language": "Java", "linescount": 1252, "location": "/commons/src/java/com/continuent/tungsten/commons/mysql", "name": "tungsten-replicator", "url": "https://searchcode.com/codesearch/view/1572667/", "md5hash": "33f855e0e1d52ffcbe55b8c04bf25c55", "lines": {"128": "            {", "444": "        {", "439": "        {", "88": "    {", "437": "", "438": "        if (len == NULL_LENGTH)", "89": "        if (size < HEADER_LENGTH)", "120": "            // This is ok, no more packet on the line", "121": "            if (packetLen1 == -1)", "90": "        {", "443": "        if (len == 0)", "442": "", "122": "            {", "126": "            // This is bad, client went away", "127": "            if (packetLen2 == -1 || packetLen3 == -1 || packetNumber == -1)"}, "id": 1572667, "filename": "MySQLPacket.java"}, {"repo": "git://github.com/dreiss/old-thrift.git", "language": "Java", "linescount": 129, "location": "/lib/java/src/org/apache/thrift/protocol", "name": "old-thrift", "url": "https://searchcode.com/codesearch/view/1683286/", "md5hash": "5ca01a8151eb6e00090c9e248903b66f", "lines": {"65": "    }", "66": "    else if (len == 2) {", "67": "      dst[dstOff+1] =", "121": "      if (len > 3) {", "15": " * KIND, either express or implied. See the License for the", "16": " * specific language governing permissions and limitations", "17": " * under the License.", "116": "       (DECODE_TABLE[src[srcOff+1] & 0x0FF] >> 4));", "117": "    if (len > 2) {", "118": "      dst[dstOff+1] = (byte)", "55": "    dst[dstOff] = (byte)ENCODE_TABLE.charAt((src[srcOff] >> 2) & 0x3F);", "56": "    if (len == 3) {", "57": "      dst[dstOff + 1] =", "122": "        dst[dstOff+2] = (byte)", "120": "         (DECODE_TABLE[src[srcOff+2] & 0x0FF] >> 2));"}, "id": 1683286, "filename": "TBase64Utils.java"}, {"repo": "git://github.com/dreiss/old-thrift.git", "language": "Java", "linescount": 129, "location": "/lib/javame/src/org/apache/thrift/protocol", "name": "old-thrift", "url": "https://searchcode.com/codesearch/view/1683396/", "md5hash": "5ca01a8151eb6e00090c9e248903b66f", "lines": {"65": "    }", "66": "    else if (len == 2) {", "67": "      dst[dstOff+1] =", "121": "      if (len > 3) {", "15": " * KIND, either express or implied. See the License for the", "16": " * specific language governing permissions and limitations", "17": " * under the License.", "116": "       (DECODE_TABLE[src[srcOff+1] & 0x0FF] >> 4));", "117": "    if (len > 2) {", "118": "      dst[dstOff+1] = (byte)", "55": "    dst[dstOff] = (byte)ENCODE_TABLE.charAt((src[srcOff] >> 2) & 0x3F);", "56": "    if (len == 3) {", "57": "      dst[dstOff + 1] =", "122": "        dst[dstOff+2] = (byte)", "120": "         (DECODE_TABLE[src[srcOff+2] & 0x0FF] >> 2));"}, "id": 1683396, "filename": "TBase64Utils.java"}, {"repo": "git://github.com/mongodb/mongo-java-driver.git", "language": "Java", "linescount": 638, "location": "/src/main/org/bson", "name": "mongo-java-driver", "url": "https://searchcode.com/codesearch/view/1844887/", "md5hash": "73185ae5d54f4d411e6b5142ce9b1d07", "lines": {"329": "            final int len = _in.readInt();", "330": "            if ( len + 4 != totalLen )", "331": "                throw new IllegalArgumentException( \"bad data size subtype 2 len: \" + len + \" totalLen: \" + totalLen );", "337": "        case B_UUID:", "338": "            if ( totalLen != 16 )", "339": "                throw new IllegalArgumentException( \"bad data size subtype 3 len: \" + totalLen + \" != 16\");", "182": "", "183": "        if ( read != len ){", "184": "            //throw new IllegalArgumentException( \"bad data.  lengths don't match \" + read + \" != \" + len );", "537": "", "538": "            if ( size < _inputBuffer.length / 2 ){", "539": "                if ( size == 1 ){", "156": "", "157": "            if ( _in.numRead() != len )", "158": "                throw new IllegalArgumentException( \"bad data.  lengths don't match read:\" + _in.numRead() + \" != len:\" + len );"}, "id": 1844887, "filename": "BasicBSONDecoder.java"}, {"repo": "https://code.google.com/p/mockito/", "language": "Java", "linescount": 795, "location": "/cglib-and-asm/src/org/mockito/asm", "name": "mockito", "url": "https://searchcode.com/codesearch/view/1935213/", "md5hash": "03ead582315409728665bcdce394921c", "lines": {"6": " * Redistribution and use in source and binary forms, with or without", "7": " * modification, are permitted provided that the following conditions", "8": " * are met:", "362": "                }", "363": "                if (buf[off + len] == 'L') {", "364": "                    ++len;", "15": " *    contributors may be used to endorse or promote products derived from", "16": " *    this software without specific prior written permission.", "17": " *", "758": "        if (sort == OBJECT || sort == ARRAY) {", "759": "            if (len != t.len) {", "760": "                return false;", "26": " * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)", "27": " * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF", "28": " * THE POSSIBILITY OF SUCH DAMAGE."}, "id": 1935213, "filename": "Type.java"}, {"repo": "http://google-enterprise-gdata-api.googlecode.com/svn/trunk/", "language": "Java", "linescount": 2905, "location": "/java/src/com/google/gdata/util/common/base", "name": "google-enterprise-gdata-api", "url": "https://searchcode.com/codesearch/view/1936684/", "md5hash": "b5ccc520b17d546bc5eb049a996cefd2", "lines": {"2192": "        if (i < values.length - 1) {", "2150": "   *", "2151": "   * @return null if s is zero length.  otherwise, returns s.", "2152": "   */", "171": "  @Deprecated public static String join(Object[] tokens, String delimiter) {", "172": "    if (tokens == null || tokens.length == 0) return \"\";", "173": "    StringBuilder result = new StringBuilder();", "2159": "   *", "2160": "   * @return null if s is zero length or if s contains only whitespace", "241": "      // a small optimization", "242": "      if (lines[i].length() <= width) {", "243": "        formatStr.append(lines[i]);", "2193": "          sw.write(entryDelim);", "2191": "        sw.write(entry.getKey() + keyValueDelim + values[i]);", "2161": "   *         characters.  otherwise, returns s."}, "id": 1936684, "filename": "StringUtil.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 321, "location": "/h2/src/test/org/h2/test/unit", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937626/", "md5hash": "8766bd62a44c15660b517bbccdefa881", "lines": {"167": "                    int len = in.read(buff2);", "168": "                    if (len < 0) {", "169": "                        break;", "273": "    private void testByteBuffer(int len) {", "274": "        if (len < 4) {", "275": "            return;", "49": "    public void test() throws Exception {", "50": "        if (testPerformance) {", "51": "            testDatabase();", "182": "                int len = in.read(buff2);", "183": "                if (len < 0) {", "56": "        testMultiThreaded();", "57": "        if (config.big) {", "58": "            for (int i = 0; i < 100; i++) {", "184": "                    break;"}, "id": 1937626, "filename": "TestCompress.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 472, "location": "/h2/src/main/org/h2/compress", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937730/", "md5hash": "d092cfc822a7680b604778865d7bba53", "lines": {"208": "                    out[outPos++] = (byte) ((off >> 8) + (len << 5));", "297": "                int maxLen = inLen - inPos - 2;", "298": "                if (maxLen > MAX_REF) {", "299": "                    maxLen = MAX_REF;", "206": "                len -= 2;", "207": "                if (len < 7) {", "80": " * into the output. For back-references, the highest three bits of the control", "81": " * byte are the back-reference length. If all three bits are set, then the", "82": " * back-reference length is stored in the next byte. The lower bits of the", "317": "                    out[outPos++] = (byte) ((off >> 8) + (len << 5));", "316": "                if (len < 7) {", "315": "                len -= 2;", "188": "                int maxLen = inLen - inPos - 2;", "189": "                if (maxLen > MAX_REF) {", "190": "                    maxLen = MAX_REF;"}, "id": 1937730, "filename": "CompressLZF.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 104, "location": "/h2/src/main/org/h2/compress", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937732/", "md5hash": "4d9248c679ceda0ef52282fae32916e4", "lines": {"41": "        int outputLen = (len < 100 ? len + 100 : len) * 2;", "42": "        if (outBuffer == null || outBuffer.length < outputLen) {", "43": "            outBuffer = new byte[outputLen];", "82": "            pos += copy;", "48": "    public void write(int b) throws IOException {", "49": "        if (pos >= buffer.length) {", "50": "            flush();", "83": "            if (pos >= buffer.length) {", "84": "                flush();", "55": "    private void compressAndWrite(byte[] buff, int len) throws IOException {", "56": "        if (len > 0) {", "57": "            ensureOutput(len);", "58": "            int compressed = compress.compress(buff, len, outBuffer, 0);", "59": "            if (compressed > len) {", "60": "                writeInt(-len);"}, "id": 1937732, "filename": "LZFOutputStream.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 135, "location": "/h2/src/main/org/h2/compress", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937734/", "md5hash": "b73aa2560e76d2b2b77befbface474d4", "lines": {"100": "    public int read(byte[] b, int off, int len) throws IOException {", "101": "        if (len == 0) {", "38": "    private void fillBuffer() throws IOException {", "39": "        if (buffer != null && pos < bufferLength) {", "40": "            return;", "119": "        if (pos >= bufferLength) {", "45": "            this.bufferLength = 0;", "46": "        } else if (len < 0) {", "47": "            len = -len;", "120": "            return -1;", "118": "        fillBuffer();", "87": "        fillBuffer();", "88": "        if (pos >= bufferLength) {", "89": "            return -1;", "102": "            return 0;"}, "id": 1937734, "filename": "LZFInputStream.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 2639, "location": "/h2/src/main/org/h2/expression", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937796/", "md5hash": "757448c903308f5831a5e4adcce060c3", "lines": {"2524": "            if (fileName == null) {", "2122": "            int len = args.length;", "2123": "            if (len > 0 && args[len - 1] == null) {", "2124": "                throw DbException.get(", "2525": "                throw DbException.get(ErrorCode.PARAMETER_NOT_SET_1, \"fileName\");", "2322": "            }", "2323": "            if (args.length == 3 && args[2].isConstant()) {", "2324": "                // if the third argument is constant it is at most this value", "88": "    public static final int ASCII = 50, BIT_LENGTH = 51, CHAR = 52,", "89": "            CHAR_LENGTH = 53, CONCAT = 54, DIFFERENCE = 55, HEXTORAW = 56,", "90": "            INSERT = 57, INSTR = 58, LCASE = 59, LEFT = 60, LENGTH = 61,", "2523": "            String fileName = argList[0].getValue(session).getString();", "2460": "            }", "2461": "            if (args.length % 2 == 0) {", "2462": "                buff.append(\" ELSE \").append(args[args.length - 1].getSQL());"}, "id": 1937796, "filename": "Function.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 1342, "location": "/h2/src/main/org/h2/store", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937920/", "md5hash": "50b8adae809e48b2fb0e745d61ae725d", "lines": {"546": "            int len = b.length;", "547": "            if (len < 32) {", "548": "                writeByte((byte) (BYTES_0_31 + len));", "813": "            int smallLen = readVarInt();", "814": "            if (smallLen >= 0) {", "815": "                byte[] small = DataUtils.newBytes(smallLen);", "817": "                return ValueLobDb.createSmallLob(type, small);", "818": "            } else if (smallLen == -3) {", "691": "        if (SysProperties.CHECK2) {", "692": "            if (pos - start != getValueLen(v, handler)) {", "693": "                throw DbException.throwInternalError(", "566": "            int len = s.length();", "567": "            if (len < 32) {", "568": "                writeByte((byte) (STRING_0_31 + len));", "819": "                int tableId = readVarInt();"}, "id": 1937920, "filename": "Data.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 511, "location": "/h2/src/main/org/h2/store", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937932/", "md5hash": "c16e833425b160c852c0b41ae432b074", "lines": {"320": "    public void write(byte[] b, int off, int len) {", "321": "        if (SysProperties.CHECK && (len < 0 ||", "322": "                len % Constants.FILE_BLOCK_SIZE != 0)) {", "376": "                if (len != fileLength) {", "375": "                len = file.size();", "352": "                long pos = filePos;", "179": "        byte[] magic = HEADER.getBytes(Constants.UTF8);", "180": "        if (length() < HEADER_LENGTH) {", "181": "            // write unencrypted", "343": "    public void setLength(long newLength) {", "344": "        if (SysProperties.CHECK && newLength % Constants.FILE_BLOCK_SIZE != 0) {", "345": "            DbException.throwInternalError(", "377": "                    DbException.throwInternalError(", "350": "        try {", "351": "            if (newLength > fileLength) {"}, "id": 1937932, "filename": "FileStore.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 87, "location": "/h2/src/main/org/h2/store", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937933/", "md5hash": "14b51d09071175e05cc395384b32239f", "lines": {"43": "    public void write(byte[] buff) {", "44": "        write(buff, 0, buff.length);", "45": "    }", "47": "    @Override", "48": "    public void write(byte[] buff, int off, int len) {", "49": "        if (len > 0) {", "50": "            page.reset();", "51": "            if (compress != null) {", "52": "                if (off != 0 || len != buff.length) {", "53": "                    byte[] b2 = new byte[len];", "54": "                    System.arraycopy(buff, off, b2, 0, len);", "55": "                    buff = b2;", "25": "        this.store = store;", "26": "        if (compressionAlgorithm != null) {", "27": "            this.compress = CompressTool.getInstance();"}, "id": 1937933, "filename": "FileStoreOutputStream.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 925, "location": "/h2/src/main/org/h2/store", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937938/", "md5hash": "c833d4d36ade682958c57888781e40c5", "lines": {"608": "                        small = b;", "583": "            byte[] buff = new byte[BLOCK_LENGTH];", "584": "            if (maxLength < 0) {", "585": "                maxLength = Long.MAX_VALUE;", "595": "                    len = IOUtils.readFully(in, buff, 0, len);", "596": "                    if (len <= 0) {", "597": "                        break;", "857": "     * @param in the input stream", "600": "                    byte[] b;", "601": "                    if (len != buff.length) {", "602": "                        b = new byte[len];", "859": "     * @return the LOB", "858": "     * @param maxLength the maximum length (-1 if not known)", "606": "                    }", "607": "                    if (seq == 0 && b.length < BLOCK_LENGTH && b.length <= maxLengthInPlaceLob) {"}, "id": 1937938, "filename": "LobStorage.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 680, "location": "/h2/src/main/org/h2/store/fs", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937947/", "md5hash": "79c15af4d65d793a188a1940797f9f28", "lines": {"96": "                    if (!n.equals(name) && n.indexOf('/', name.length() + 1) < 0) {", "97": "                        list.add(getPath(n));", "579": "        len = MathUtils.roundUpLong(len, BLOCK_SIZE);", "580": "        int blocks = (int) (len >>> BLOCK_SIZE_SHIFT);", "581": "        if (blocks != data.length) {", "582": "            byte[][] n = new byte[blocks][];", "526": "            int len = LZF.compress(d, BLOCK_SIZE, BUFFER, 0);", "527": "            if (len <= BLOCK_SIZE) {", "528": "                d = new byte[len];", "563": "        long end = MathUtils.roundUpLong(newLength, BLOCK_SIZE);", "564": "        if (end != newLength) {", "565": "            int lastPage = (int) (newLength >>> BLOCK_SIZE_SHIFT);", "566": "            expand(data, lastPage);", "602": "        long end = pos + len;", "603": "        if (end > length) {", "604": "            if (write) {", "95": "                if (n.startsWith(name)) {"}, "id": 1937947, "filename": "FilePathMem.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 661, "location": "/h2/src/main/org/h2/value", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937969/", "md5hash": "c801396da6a8d7bcd0e713eda33fa82d", "lines": {"512": "            char[] buff;", "513": "            if (len >= Integer.MAX_VALUE) {", "514": "                String data = IOUtils.readStringAndClose(reader, -1);", "547": "            if (length >= 0 && length < remaining) {", "548": "                remaining = length;", "551": "            byte[] buff;", "552": "            if (len >= Integer.MAX_VALUE) {", "521": "            }", "522": "            if (len <= handler.getMaxLengthInplaceLob()) {", "523": "                byte[] small = new String(buff, 0, len).getBytes(Constants.UTF8);", "546": "            boolean compress = handler.getLobCompressionAlgorithm(Value.BLOB) != null;", "558": "            }", "559": "            if (len <= handler.getMaxLengthInplaceLob()) {", "560": "                byte[] small = DataUtils.newBytes(len);", "553": "                buff = IOUtils.readBytesAndClose(in, -1);"}, "id": 1937969, "filename": "ValueLobDb.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 837, "location": "/h2/src/main/org/h2/value", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937973/", "md5hash": "1b2f5d6368d02869cc6ca874d1d06962", "lines": {"240": "                    break;", "271": "            path = new File(Utils.getProperty(\"java.io.tmpdir\", \".\"),", "269": "        String path = h.getDatabasePath();", "238": "                len = IOUtils.readFully(in, buff, len);", "175": "            long remaining = Long.MAX_VALUE;", "176": "            if (length >= 0 && length < remaining) {", "177": "                remaining = length;", "270": "        if ((path != null) && (path.length() == 0)) {", "180": "            char[] buff;", "181": "            if (len >= Integer.MAX_VALUE) {", "182": "                String data = IOUtils.readStringAndClose(in, -1);", "239": "                if (len == 0) {", "188": "            }", "189": "            if (len <= handler.getMaxLengthInplaceLob()) {", "190": "                byte[] small = new String(buff, 0, len).getBytes(Constants.UTF8);"}, "id": 1937973, "filename": "ValueLob.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 782, "location": "/h2/src/main/org/h2/value", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1937976/", "md5hash": "f1a4c6e7ce227f23f9c91961185a9aae", "lines": {"293": "        int len = readInt();", "294": "        if (len == -1) {", "295": "            return null;", "631": "                if (length == -1) {", "598": "                    int tableId = readInt();", "630": "            if (version >= Constants.TCP_PROTOCOL_VERSION_11) {", "596": "            if (version >= Constants.TCP_PROTOCOL_VERSION_11) {", "597": "                if (length == -1) {", "246": "        if (len == -1) {", "247": "            return null;", "632": "                    int tableId = readInt();", "667": "            Class<?> componentType = Object.class;", "668": "            if (len < 0) {", "669": "                len = -(len + 1);", "245": "        int len = in.readInt();"}, "id": 1937976, "filename": "Transfer.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 469, "location": "/h2/src/main/org/h2/util", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1938112/", "md5hash": "dd5ed8c6826948d87014a34f859ecb32", "lines": {"279": "                length = Integer.MAX_VALUE;", "43": "        if (out != null) {", "168": "                len = in.read(buffer, 0, len);", "201": "                len = in.read(buffer, 0, len);", "41": "     */", "203": "                    break;", "302": "        try {", "303": "            if (length <= 0) {", "304": "                length = Integer.MAX_VALUE;", "170": "                    break;", "277": "        try {", "278": "            if (length <= 0) {", "169": "                if (len < 0) {", "202": "                if (len < 0) {", "42": "    public static void closeSilently(Closeable out) {"}, "id": 1938112, "filename": "IOUtils.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 998, "location": "/h2/src/main/org/h2/util", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1938137/", "md5hash": "ff3c490b2977f0542071f82f193dc64e", "lines": {"230": "            return false;", "228": "        int len = test.length;", "197": "        int h = len;", "198": "        if (len < 50) {", "199": "            for (int i = 0; i < len; i++) {", "168": "    public static int indexOf(byte[] bytes, byte[] pattern, int start) {", "169": "        if (pattern.length == 0) {", "170": "            return start;", "171": "        }", "172": "        if (start > bytes.length) {", "173": "            return -1;", "232": "        if (len == 0) {", "233": "            return true;", "231": "        }", "229": "        if (len != good.length) {"}, "id": 1938137, "filename": "Utils.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 358, "location": "/h2/src/tools/org/h2/dev/fs", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1938248/", "md5hash": "e14ce1f14ef8196272a61d5f96e9df89", "lines": {"226": "        len = (int) Math.min(len, size() - pos);", "227": "        if (len <= 0) {", "228": "            return -1;", "198": "    public FileChannel truncate(long newLength) throws IOException {", "199": "        if (newLength >= size()) {", "200": "            return this;", "83": "    private String[] parse(String fileName) {", "84": "        if (!fileName.startsWith(getScheme())) {", "85": "            DbException.throwInternalError(fileName + \" doesn't start with \" + getScheme());", "214": "        if (newLength < position()) {", "215": "            position(newLength);", "223": "            return 0;", "221": "        int len = dst.remaining();", "222": "        if (len == 0) {", "213": "        file.truncate(HEADER_LENGTH + newLength + BLOCK_SIZE);"}, "id": 1938248, "filename": "FilePathCrypt.java"}, {"repo": "http://h2database.googlecode.com/svn/trunk/", "language": "Java", "linescount": 235, "location": "/h2/src/tools/org/h2/dev/util", "name": "h2database", "url": "https://searchcode.com/codesearch/view/1938251/", "md5hash": "eb3361b3c31d717279716b582170ce9a", "lines": {"64": "        test(false, len);", "65": "        test(true, len);", "187": "            if (len > 1 && enc[len - 2] == '=') {", "41": "    private static void check(String a, String b) {", "42": "        if (!a.equals(b)) {", "43": "            throw new RuntimeException(\"mismatch: \" + a + \" <> \" + b);", "188": "                size--;", "184": "        int len = enc.length, size = (len * 3) / 4;", "185": "        if (len > 0 && enc[len - 1] == '=') {", "90": "    private static void test(byte[] in, byte[] out) {", "91": "        if (in.length != out.length) {", "92": "            throw new RuntimeException(\"Length error\");", "186": "            size--;", "62": "        check(new String(decode(\"QUJDRA==\".getBytes())), \"ABCD\");", "63": "        int len = 10000;"}, "id": 1938251, "filename": "Base64.java"}, {"repo": "http://openintents.googlecode.com/svn/trunk/", "language": "Java", "linescount": 217, "location": "/samples/EnumClient/dnsjava-2.0.6/org/xbill/DNS", "name": "openintents", "url": "https://searchcode.com/codesearch/view/1942952/", "md5hash": "bb37af1927eabbcc16c85621cb057877", "lines": {"64": "\tif (len > array.length - pos) {", "65": "\t\tthrow new IllegalArgumentException(\"cannot set active \" +", "162": " * array.", "195": "readByteArray() {", "196": "\tint len = remaining();", "197": "\tbyte [] out = new byte[len];", "161": " * Reads a byte array of a specified length from the stream into an existing", "160": "/**", "175": "/**", "176": " * Reads a byte array of a specified length from the stream.", "177": " * @return The byte array.", "87": "jump(int index) {", "88": "\tif (index >= array.length) {", "89": "\t\tthrow new IllegalArgumentException(\"cannot jump past \" +", "63": "setActive(int len) {"}, "id": 1942952, "filename": "DNSInput.java"}, {"repo": "http://openintents.googlecode.com/svn/trunk/", "language": "Java", "linescount": 842, "location": "/samples/EnumClient/dnsjava-2.0.6/org/xbill/DNS", "name": "openintents", "url": "https://searchcode.com/codesearch/view/1943010/", "md5hash": "8012edc35cc0d944c91c59ea97a5a1ab", "lines": {"162": "\t\tint len = array[pos];", "163": "\t\tif (len > MAXLABEL)", "164": "\t\t\tthrow new IllegalStateException(\"invalid label\");", "169": "\tint newlength = length + alength;", "170": "\tif (newlength > MAXNAME)", "171": "\t\tthrow new NameTooLongException();", "514": "", "176": "\tbyte [] newname = new byte[newlength];", "177": "\tif (length != 0)", "178": "\t\tSystem.arraycopy(name, offset(0), newname, 0, length);", "515": "\tif (plength + dlength > MAXNAME)", "374": "\t\t\t\tthrow new WireParseException(\"too many labels\");", "375": "\t\t\tif (len == 0) {", "376": "\t\t\t\tappend(emptyLabel, 0, 1);", "516": "\t\tthrow new NameTooLongException();"}, "id": 1943010, "filename": "Name.java"}, {"repo": "http://open-ig.googlecode.com/svn/trunk/", "language": "Java", "linescount": 2059, "location": "/open-ig/src/hu/openig/utils", "name": "open-ig", "url": "https://searchcode.com/codesearch/view/2121760/", "md5hash": "572f9368787fa5b0bfac86c394268e21", "lines": {"896": "\t * @since 2.3.1", "838": "\t * @throws NullPointerException if source array is null", "839": "\t * @throws IllegalArgumentException if source array, offset, or length are invalid", "840": "\t * @since 2.0", "908": "", "490": "\t * The source and destination arrays can be manipulated", "491": "\t * anywhere along their length by specifying ", "492": "\t * {@code srcOffset} and {@code destOffset}.", "909": "\t\tif (len < 0) {", "910": "\t\t\tthrow new IllegalArgumentException(\"Cannot have length offset: \" + len);", "790": "\t * @throws NullPointerException if source array is null", "791": "\t * @throws IllegalArgumentException if source array, offset, or length are invalid", "792": "\t * @since 1.4", "894": "\t * @throws NullPointerException if source array is null", "895": "\t * @throws IllegalArgumentException if source array, offset, or length are invalid"}, "id": 2121760, "filename": "Base64.java"}, {"repo": "http://fb2pdf.googlecode.com/svn/trunk/", "language": "Java", "linescount": 672, "location": "/src/java/src/com/itextpdf/text/pdf/hyphenation", "name": "fb2pdf", "url": "https://searchcode.com/codesearch/view/2126920/", "md5hash": "afb2d744549037096f0201a997f46bd2", "lines": {"192": "            if (len > 0) {", "193": "                sc[p] = kv.get(lo[pp]);", "171": "            hi[p] = 0;", "172": "            if (len > 0) {", "173": "                sc[p] = 0xFFFF;    // indicates branch is compressed", "142": "        if (freenode + len > eq.length) {", "141": "                  + 1;    // maximum number of nodes that may be generated", "152": "        int len = strlen(key) + 1;", "153": "        if (freenode + len > eq.length) {", "154": "            redimNodeArrays(eq.length + BLOCK_SIZE);", "143": "            redimNodeArrays(eq.length + BLOCK_SIZE);", "572": "                    ns.push(i.clone());", "573": "                    if (ks.length() > 0) {", "574": "                        ks.setLength(ks.length() - 1);    // pop", "191": "            lo[p] = 0;"}, "id": 2126920, "filename": "TernaryTree.java"}, {"repo": "http://fb2pdf.googlecode.com/svn/trunk/", "language": "Java", "linescount": 994, "location": "/src/java/src/com/itextpdf/text/pdf/codec", "name": "fb2pdf", "url": "https://searchcode.com/codesearch/view/2127021/", "md5hash": "74e5c862e6fbdc3bf258968101c514ce", "lines": {"256": "            return false;", "289": "                    case 0:", "290": "                        if (len >= 2) {", "291": "                            len -= 2;", "299": "                    case 2:", "300": "                        if (len >= 6) {", "301": "                            len -= 6;", "274": "            String marker = getString(is);", "275": "            if (len < 0 || !checkMarker(marker))", "276": "                throw new IOException(MessageLocalization.getComposedMessage(\"corrupted.png.file\"));", "759": "                    int idx = out[srcX];", "760": "                    if (idx < trans.length)", "761": "                        v[0] = trans[idx];", "254": "    boolean checkMarker(String s) {", "255": "        if (s.length() != 4)"}, "id": 2127021, "filename": "PngImage.java"}, {"repo": "git://github.com/bpellin/keepassdroid.git", "language": "Java", "linescount": 1406, "location": "/src/org/bouncycastle/jce/provider", "name": "keepassdroid", "url": "https://searchcode.com/codesearch/view/2153016/", "md5hash": "6054fcecb0971e6875c5f34c8deb4a5f", "lines": {"224": "            if (modeName.length() != 3)", "225": "            {", "447": "            {", "240": "            if (modeName.length() != 3)", "270": "            ivLength = baseEngine.getBlockSize();", "271": "            if (ivLength < 16)", "272": "            {", "241": "            {", "404": "        //", "405": "        // a note on iv's - if ivLength is zero the IV gets ignored (we don't use it).", "406": "        //", "239": "            ivLength = baseEngine.getBlockSize();", "445": "        {", "446": "            if (ivLength != 0)", "223": "            ivLength = baseEngine.getBlockSize();"}, "id": 2153016, "filename": "JCEBlockCipher.java"}, {"repo": "git://github.com/bpellin/keepassdroid.git", "language": "Java", "linescount": 266, "location": "/src/org/bouncycastle/crypto/modes", "name": "keepassdroid", "url": "https://searchcode.com/codesearch/view/2153061/", "md5hash": "aaf97503b5d29bb555e5b8be6c88b8d6", "lines": {"132": "        ", "133": "        if (length > 0)", "134": "        {", "113": "     * @return the number of output bytes copied to out.", "92": "        if (bufOff == buf.length)", "114": "     * @exception DataLengthException if there isn't enough space in out.", "125": "        if (len < 0)", "80": "     * @return the number of output bytes copied to out.", "81": "     * @exception DataLengthException if there isn't enough space in out.", "82": "     * @exception IllegalStateException if the cipher isn't initialised.", "115": "     * @exception IllegalStateException if the cipher isn't initialised.", "91": "", "124": "    {", "93": "        {", "126": "        {"}, "id": 2153061, "filename": "CTSBlockCipher.java"}, {"repo": "http://siena.googlecode.com/svn/trunk/", "language": "Java", "linescount": 1980, "location": "/siena/src/main/java/siena/sdb/ws", "name": "siena", "url": "https://searchcode.com/codesearch/view/2289150/", "md5hash": "07f7d15a76020871debd1e7b040eaf05", "lines": {"448": "     * The source and destination arrays can be manipulated", "449": "     * anywhere along their length by specifying ", "450": "     * <var>srcOffset</var> and <var>destOffset</var>.", "743": "     * @throws NullPointerException if source array is null", "744": "     * @throws IllegalArgumentException if source array, offset, or length are invalid", "745": "     * @since 1.4", "847": "     * @throws NullPointerException if source array is null", "848": "     * @throws IllegalArgumentException if source array, offset, or length are invalid", "849": "     * @since 2.3.1", "791": "     * @throws NullPointerException if source array is null", "792": "     * @throws IllegalArgumentException if source array, offset, or length are invalid", "793": "     * @since 2.0", "860": "", "861": "        if( len < 0 ){", "862": "            throw new IllegalArgumentException( \"Cannot have length offset: \" + len );"}, "id": 2289150, "filename": "Base64.java"}, {"repo": "http://hyk-proxy.googlecode.com/svn/trunk/", "language": "Java", "linescount": 102, "location": "/android/src/com/hyk/proxy/common/rpc/extension/compress/lzf", "name": "hyk-proxy", "url": "https://searchcode.com/codesearch/view/2329452/", "md5hash": "f1ea6523f8e420d0ce5718481ab493d9", "lines": {"83": "            if (pos >= buffer.length) {", "82": "            pos += copy;", "43": "        int outputLen = (len < 100 ? len + 100 : len) * 2;", "44": "        if (outBuffer == null || outBuffer.length < outputLen) {", "45": "            outBuffer = new byte[outputLen];", "49": "    public void write(int b) throws IOException {", "50": "        if (pos >= buffer.length) {", "51": "            flush();", "84": "                flush();", "56": "    private void compressAndWrite(byte[] buff, int len) throws IOException {", "57": "        if (len > 0) {", "58": "            ensureOutput(len);", "59": "            int compressed = compress.compress(buff, len, outBuffer, 0);", "60": "            if (compressed > len) {", "61": "                writeInt(-len);"}, "id": 2329452, "filename": "LZFOutputStream.java"}, {"repo": "http://hyk-proxy.googlecode.com/svn/trunk/", "language": "Java", "linescount": 154, "location": "/android/src/com/hyk/proxy/common/rpc/extension/compress/lzf", "name": "hyk-proxy", "url": "https://searchcode.com/codesearch/view/2329454/", "md5hash": "fd335850cbb5cc01658b0d5bdf6e8d7c", "lines": {"65": "    private void fillBuffer() throws IOException {", "66": "        if (buffer != null && pos < bufferLength) {", "67": "            return;", "40": "        try {", "73": "        } else if (len < 0) {", "42": "                return EMPTY_BYTES;", "139": "        if (pos >= bufferLength) {", "140": "            return -1;", "109": "        fillBuffer();", "110": "        if (pos >= bufferLength) {", "111": "            return -1;", "72": "            this.bufferLength = 0;", "138": "        fillBuffer();", "41": "            if (len == 0) {", "74": "            len = -len;"}, "id": 2329454, "filename": "LZFInputStream.java"}, {"repo": "https://bitbucket.org/ryanwsmith/apkinspector/", "language": "Java", "linescount": 1417, "location": "/androguard/classification/libsimilarity/sources/lzma/Java/SevenZip/Compression/LZMA", "name": "apkinspector", "url": "https://searchcode.com/codesearch/view/2359575/", "md5hash": "2b645311fdab97dafeb2634a8134f200", "lines": {"576": "\t\t\trepLens[i] = _matchFinder.GetMatchLen(0 - 1, reps[i], Base.kMatchMaxLen);", "577": "\t\t\tif (repLens[i] > repLens[repMaxIndex])", "578": "\t\t\t\trepMaxIndex = i;", "197": "\t\t{", "198": "\t\t\tif (symbol < Base.kNumLowLenSymbols)", "199": "\t\t\t{", "439": "\t\t\t\tlenRes += _matchFinder.GetMatchLen((int)lenRes - 1, _matchDistances[_numDistancePairs - 1],", "206": "\t\t\t\trangeEncoder.Encode(_choice, 0, 1);", "207": "\t\t\t\tif (symbol < Base.kNumMidLenSymbols)", "208": "\t\t\t\t{", "437": "\t\t\tlenRes = _matchDistances[_numDistancePairs - 2];", "438": "\t\t\tif (lenRes == _numFastBytes)", "567": "\t\t}", "568": "\t\tif (numAvailableBytes > Base.kMatchMaxLen)", "569": "\t\t\tnumAvailableBytes = Base.kMatchMaxLen;"}, "id": 2359575, "filename": "Encoder.java"}], "page": 0, "nextpage": 1, "source_filters": [{"count": 3010, "source": "Google Code", "id": 1}, {"count": 1288, "source": "Github", "id": 2}, {"count": 730, "source": "Sourceforge", "id": 4}, {"count": 118, "source": "Bitbucket", "id": 3}, {"count": 17, "source": "CodePlex", "id": 5}]}

